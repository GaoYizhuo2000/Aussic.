Index: app/src/main/java/au/edu/anu/Aussic/controller/songPages/SongActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.songPages;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.app.Dialog;\nimport android.content.Intent;\nimport android.graphics.Color;\nimport android.graphics.drawable.ColorDrawable;\nimport android.media.MediaPlayer;\nimport android.os.Bundle;\nimport android.view.Gravity;\nimport android.view.KeyEvent;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.Window;\nimport android.view.animation.AnimationUtils;\nimport android.view.inputmethod.EditorInfo;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.RequestOptions;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.gson.Gson;\nimport com.google.gson.JsonObject;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.CardAdapter;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.CommentAdapter;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.CommentItem;\nimport au.edu.anu.Aussic.controller.homePages.HomeActivity;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDao;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;\nimport au.edu.anu.Aussic.models.observer.MediaObserver;\nimport au.edu.anu.Aussic.models.userAction.Comment;\nimport au.edu.anu.Aussic.models.userAction.Favorites;\nimport au.edu.anu.Aussic.models.userAction.Like;\nimport au.edu.anu.Aussic.models.userAction.UserAction;\nimport au.edu.anu.Aussic.models.userAction.UserActionFactory;\n\npublic class SongActivity extends AppCompatActivity {\n    private ImageView roundImageView;\n    private TextView nameText;\n    private TextView artistText;\n    private ImageView play;\n    private ImageView like;\n    private ImageView fav;\n    private ImageView comment;\n    FirestoreDao firestoreDao = new FirestoreDaoImpl();\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_song);\n\n        this.roundImageView = findViewById(R.id.song_spinning_round_image);\n        this.nameText = findViewById(R.id.song_song_name);\n        this.artistText = findViewById(R.id.song_artist_name);\n        this.play = findViewById(R.id.song_fab);\n        this.like = findViewById(R.id.song_like);\n        this.fav = findViewById(R.id.song_fav);\n        this.comment = findViewById(R.id.song_comment);\n\n        if (MediaObserver.getCurrentSong() != null)\n        setTheSong(CardAdapter.makeImageUrl(200, 200, MediaObserver.getCurrentSong().getUrlToImage()), MediaObserver.getCurrentSong().getSongName(), MediaObserver.getCurrentSong().getArtistName());\n\n        if(MediaObserver.getCurrentMediaPlayer().isPlaying()) this.play.setImageResource(R.drawable.ic_song_pause);\n        this.play.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                if (MediaObserver.getCurrentMediaPlayer() != null) {\n                    if (MediaObserver.getCurrentMediaPlayer().isPlaying()) {\n                        MediaObserver.getCurrentMediaPlayer().pause();\n                        play.setImageResource(R.drawable.ic_song_play);\n                        roundImageView.clearAnimation();\n                        MediaObserver.notifyListeners();\n                    } else {\n                        MediaObserver.getCurrentMediaPlayer().start();\n                        play.setImageResource(R.drawable.ic_song_pause);\n                        roundImageView.startAnimation(AnimationUtils.loadAnimation(SongActivity.this, R.anim.spinning));\n                        MediaObserver.notifyListeners();\n                    }\n                }\n            }\n        });\n\n        this.like.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v){\n                like.setImageResource(R.drawable.ic_song_like);\n                firestoreDao.updateUserLikes(MediaObserver.getCurrentSong().getId())\n                        .thenAccept(msg -> {\n                            if(msg == null){\n                                new Like(\"like\", FirebaseAuth.getInstance().getCurrentUser().getEmail(), MediaObserver.getCurrentSong().getSongName(), Integer.parseInt(MediaObserver.getCurrentSong().getId())).update();\n                            }else {\n                                Toast.makeText(SongActivity.this,msg,Toast.LENGTH_SHORT).show();\n                            }\n                        });\n            }\n        });\n\n        this.fav.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v){\n                fav.setImageResource(R.drawable.ic_song_fav);\n                firestoreDao.updateUserFavorites(MediaObserver.getCurrentSong().getId())\n                        .thenAccept(msg -> {\n                            if(msg == null){\n                                new Favorites(\"favorites\", FirebaseAuth.getInstance().getCurrentUser().getEmail(), MediaObserver.getCurrentSong().getSongName(), Integer.parseInt(MediaObserver.getCurrentSong().getId())).update();\n                            }else {\n                                Toast.makeText(SongActivity.this,msg,Toast.LENGTH_SHORT).show();\n                            }\n                });\n            }\n        });\n        this.comment.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v){\n                showBottomComments();\n            }\n        });\n\n\n\n\n\n\n    }\n\n    private void setTheSong(String imageUrl,String songName, String artistName){\n\n        Glide.with(this)\n                .load(imageUrl)\n                .apply(new RequestOptions().override((int)(1200 * 0.8), (int)(1200 * 0.8)))\n                .circleCrop()\n                .into(this.roundImageView);\n        if(MediaObserver.getCurrentMediaPlayer().isPlaying())   this.roundImageView.startAnimation(AnimationUtils.loadAnimation(this, R.anim.spinning));\n        else this.roundImageView.clearAnimation();\n        nameText.setText(CardAdapter.adjustLength(songName));\n        artistText.setText(CardAdapter.adjustLength(artistName));\n    }\n\n    private void showBottomComments() {\n        final Dialog dialog = new Dialog(this);\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\n        dialog.setContentView(R.layout.layout_comments);  // This is the layout for the comments.\n\n        // Views from the comments layout\n        EditText commentInput = dialog.findViewById(R.id.song_comment_input);\n        RecyclerView commentsRecyclerView = dialog.findViewById(R.id.rv_comments_list);\n        // If you have a RecyclerView adapter, initialize it here and set it to the RecyclerView\n\n        // We'll use the EditText's 'imeOptions' for the comment submission.\n        // First, set the EditText's IME action label to \"Submit\" and actionId to actionSend in the XML.\n        commentInput.setOnEditorActionListener(new TextView.OnEditorActionListener() {\n            @Override\n            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {\n                if (actionId == EditorInfo.IME_ACTION_SEND) {\n                    // Handle the comment submission here.\n                    String commentText = commentInput.getText().toString().trim();\n                    if (!commentText.isEmpty()) {\n                        // Add the comment to your comments list, update the RecyclerView, etc.\n                        dialog.dismiss();\n                    } else {\n                        Toast.makeText(SongActivity.this, \"Please enter a comment\", Toast.LENGTH_SHORT).show();\n                    }\n                    return true;\n                }\n                return false;\n            }\n        });\n\n        // Your data list for the comments\n        List<CommentItem> commentList = new ArrayList<>();\n        // get and load comments\n        firestoreDao.getComment(MediaObserver.getCurrentSong().getId())\n                .thenAccept(details -> {\n                    for(Map<String, Object> comment : details) {\n                        CommentItem newComment = new CommentItem(0, (String) comment.get(\"uid\"), (String) comment.get(\"content\"));\n                        commentList.add(newComment);\n                    }\n        });\n\n        // Setup the RecyclerView and its adapter\n\n        CommentAdapter commentAdapter = new CommentAdapter(commentList);\n        commentsRecyclerView.setAdapter(commentAdapter);\n        commentsRecyclerView.setLayoutManager(new LinearLayoutManager(this));\n\n        // Find and set an OnClickListener to the button\n        Button sendButton = dialog.findViewById(R.id.the_btn_send);\n        sendButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // Retrieve the comment from the EditText\n                String commentText = commentInput.getText().toString().trim();\n\n\n                if (!commentText.isEmpty()) {\n                    //update songs comment in firestore\n                    new Comment(\"comment\", FirebaseAuth.getInstance().getCurrentUser().getEmail(),MediaObserver.getCurrentSong().getSongName()\n                            , Integer.parseInt(MediaObserver.getCurrentSong().getId()), commentText ).update();\n                    // Create a new CommentItem object and add it to the commentList\n                    // Assuming CommentItem is a class that represents a comment with user avatar, name, and content\n                    CommentItem newComment = new CommentItem(0, \"Admin\", commentText);\n                    commentList.add(newComment);\n\n                    // Notify the adapter that an item was added to the end of the list\n                    commentAdapter.notifyItemInserted(commentList.size() - 1);\n\n                    // Optional: Clear the EditText after sending the comment\n                    commentInput.setText(\"\");\n\n                    // Optional: Scroll the RecyclerView to show the new comment\n                    commentsRecyclerView.smoothScrollToPosition(commentList.size() - 1);\n                } else {\n                    Toast.makeText(SongActivity.this, \"Please enter a comment\", Toast.LENGTH_SHORT).show();\n                }\n            }\n        });\n\n        // If you want an additional UI element, like a close/cancel button, you can implement it similar to before:\n        // ImageView cancelButton = dialog.findViewById(R.id.cancelButton);\n        // cancelButton.setOnClickListener(new View.OnClickListener() {...}\n//        sendButton.setOnClickListener(new View.OnClickListener() {\n//            @Override\n//            public void onClick(View v) {\n//                String commentText = commentInput.getText().toString().trim();\n//                if (!commentText.isEmpty()) {\n//                    // Handle the comment submission, e.g., add the comment to your comments list, update the RecyclerView, etc.\n//                    dialog.dismiss();\n//                } else {\n//                    Toast.makeText(SongActivity.this, \"Please enter a comment\", Toast.LENGTH_SHORT).show();\n//                }\n//            }\n//        });\n\n        dialog.show();\n\n        // Set the dimensions and appearance of the dialog\n        dialog.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;\n        dialog.getWindow().setGravity(Gravity.BOTTOM);\n\n        // Allow the dialog to be canceled by touching outside its bounds\n        dialog.setCancelable(true);\n        dialog.setCanceledOnTouchOutside(true);\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/songPages/SongActivity.java b/app/src/main/java/au/edu/anu/Aussic/controller/songPages/SongActivity.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/songPages/SongActivity.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/songPages/SongActivity.java	(date 1697081237841)
@@ -5,10 +5,8 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import android.app.Dialog;
-import android.content.Intent;
 import android.graphics.Color;
 import android.graphics.drawable.ColorDrawable;
-import android.media.MediaPlayer;
 import android.os.Bundle;
 import android.view.Gravity;
 import android.view.KeyEvent;
@@ -26,8 +24,6 @@
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.request.RequestOptions;
 import com.google.firebase.auth.FirebaseAuth;
-import com.google.gson.Gson;
-import com.google.gson.JsonObject;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -37,15 +33,12 @@
 import au.edu.anu.Aussic.controller.homePages.Adapter.CardAdapter;
 import au.edu.anu.Aussic.controller.homePages.Adapter.CommentAdapter;
 import au.edu.anu.Aussic.controller.homePages.Adapter.CommentItem;
-import au.edu.anu.Aussic.controller.homePages.HomeActivity;
 import au.edu.anu.Aussic.models.firebase.FirestoreDao;
 import au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;
-import au.edu.anu.Aussic.models.observer.MediaObserver;
+import au.edu.anu.Aussic.controller.observer.RuntimeObserver;
 import au.edu.anu.Aussic.models.userAction.Comment;
 import au.edu.anu.Aussic.models.userAction.Favorites;
 import au.edu.anu.Aussic.models.userAction.Like;
-import au.edu.anu.Aussic.models.userAction.UserAction;
-import au.edu.anu.Aussic.models.userAction.UserActionFactory;
 
 public class SongActivity extends AppCompatActivity {
     private ImageView roundImageView;
@@ -71,25 +64,25 @@
         this.fav = findViewById(R.id.song_fav);
         this.comment = findViewById(R.id.song_comment);
 
-        if (MediaObserver.getCurrentSong() != null)
-        setTheSong(CardAdapter.makeImageUrl(200, 200, MediaObserver.getCurrentSong().getUrlToImage()), MediaObserver.getCurrentSong().getSongName(), MediaObserver.getCurrentSong().getArtistName());
+        if (RuntimeObserver.getCurrentSong() != null)
+            setTheSong(CardAdapter.makeImageUrl(200, 200, RuntimeObserver.getCurrentSong().getUrlToImage()), RuntimeObserver.getCurrentSong().getSongName(), RuntimeObserver.getCurrentSong().getArtistName());
 
-        if(MediaObserver.getCurrentMediaPlayer().isPlaying()) this.play.setImageResource(R.drawable.ic_song_pause);
+        if(RuntimeObserver.getCurrentMediaPlayer().isPlaying()) this.play.setImageResource(R.drawable.ic_song_pause);
         this.play.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
 
-                if (MediaObserver.getCurrentMediaPlayer() != null) {
-                    if (MediaObserver.getCurrentMediaPlayer().isPlaying()) {
-                        MediaObserver.getCurrentMediaPlayer().pause();
+                if (RuntimeObserver.getCurrentMediaPlayer() != null) {
+                    if (RuntimeObserver.getCurrentMediaPlayer().isPlaying()) {
+                        RuntimeObserver.getCurrentMediaPlayer().pause();
                         play.setImageResource(R.drawable.ic_song_play);
                         roundImageView.clearAnimation();
-                        MediaObserver.notifyListeners();
+                        RuntimeObserver.notifyListeners();
                     } else {
-                        MediaObserver.getCurrentMediaPlayer().start();
+                        RuntimeObserver.getCurrentMediaPlayer().start();
                         play.setImageResource(R.drawable.ic_song_pause);
                         roundImageView.startAnimation(AnimationUtils.loadAnimation(SongActivity.this, R.anim.spinning));
-                        MediaObserver.notifyListeners();
+                        RuntimeObserver.notifyListeners();
                     }
                 }
             }
@@ -99,10 +92,10 @@
             @Override
             public void onClick(View v){
                 like.setImageResource(R.drawable.ic_song_like);
-                firestoreDao.updateUserLikes(MediaObserver.getCurrentSong().getId())
+                firestoreDao.updateUserLikes(RuntimeObserver.getCurrentSong().getId())
                         .thenAccept(msg -> {
                             if(msg == null){
-                                new Like("like", FirebaseAuth.getInstance().getCurrentUser().getEmail(), MediaObserver.getCurrentSong().getSongName(), Integer.parseInt(MediaObserver.getCurrentSong().getId())).update();
+                                new Like("like", FirebaseAuth.getInstance().getCurrentUser().getEmail(), RuntimeObserver.getCurrentSong().getSongName(), Integer.parseInt(RuntimeObserver.getCurrentSong().getId())).update();
                             }else {
                                 Toast.makeText(SongActivity.this,msg,Toast.LENGTH_SHORT).show();
                             }
@@ -114,10 +107,10 @@
             @Override
             public void onClick(View v){
                 fav.setImageResource(R.drawable.ic_song_fav);
-                firestoreDao.updateUserFavorites(MediaObserver.getCurrentSong().getId())
+                firestoreDao.updateUserFavorites(RuntimeObserver.getCurrentSong().getId())
                         .thenAccept(msg -> {
                             if(msg == null){
-                                new Favorites("favorites", FirebaseAuth.getInstance().getCurrentUser().getEmail(), MediaObserver.getCurrentSong().getSongName(), Integer.parseInt(MediaObserver.getCurrentSong().getId())).update();
+                                new Favorites("favorites", FirebaseAuth.getInstance().getCurrentUser().getEmail(), RuntimeObserver.getCurrentSong().getSongName(), Integer.parseInt(RuntimeObserver.getCurrentSong().getId())).update();
                             }else {
                                 Toast.makeText(SongActivity.this,msg,Toast.LENGTH_SHORT).show();
                             }
@@ -145,7 +138,7 @@
                 .apply(new RequestOptions().override((int)(1200 * 0.8), (int)(1200 * 0.8)))
                 .circleCrop()
                 .into(this.roundImageView);
-        if(MediaObserver.getCurrentMediaPlayer().isPlaying())   this.roundImageView.startAnimation(AnimationUtils.loadAnimation(this, R.anim.spinning));
+        if(RuntimeObserver.getCurrentMediaPlayer().isPlaying())   this.roundImageView.startAnimation(AnimationUtils.loadAnimation(this, R.anim.spinning));
         else this.roundImageView.clearAnimation();
         nameText.setText(CardAdapter.adjustLength(songName));
         artistText.setText(CardAdapter.adjustLength(artistName));
@@ -183,21 +176,24 @@
 
         // Your data list for the comments
         List<CommentItem> commentList = new ArrayList<>();
+        CommentAdapter commentAdapter = new CommentAdapter(commentList);
         // get and load comments
-        firestoreDao.getComment(MediaObserver.getCurrentSong().getId())
+        firestoreDao.getComment(RuntimeObserver.getCurrentSong().getId())
                 .thenAccept(details -> {
                     for(Map<String, Object> comment : details) {
-                        CommentItem newComment = new CommentItem(0, (String) comment.get("uid"), (String) comment.get("content"));
+                        CommentItem newComment = new CommentItem("https://firebasestorage.googleapis.com/v0/b/aussic-52582.appspot.com/o/icon%2Fdefault.jpg?alt=media", (String) comment.get("uid"), (String) comment.get("content"));
                         commentList.add(newComment);
                     }
-        });
 
-        // Setup the RecyclerView and its adapter
-
-        CommentAdapter commentAdapter = new CommentAdapter(commentList);
-        commentsRecyclerView.setAdapter(commentAdapter);
-        commentsRecyclerView.setLayoutManager(new LinearLayoutManager(this));
+                    commentsRecyclerView.setAdapter(commentAdapter);
+                    commentsRecyclerView.setLayoutManager(new LinearLayoutManager(this));
 
+        });
+
+        // Setup the RecyclerView and its adapter
+
+
+
         // Find and set an OnClickListener to the button
         Button sendButton = dialog.findViewById(R.id.the_btn_send);
         sendButton.setOnClickListener(new View.OnClickListener() {
@@ -209,11 +205,11 @@
 
                 if (!commentText.isEmpty()) {
                     //update songs comment in firestore
-                    new Comment("comment", FirebaseAuth.getInstance().getCurrentUser().getEmail(),MediaObserver.getCurrentSong().getSongName()
-                            , Integer.parseInt(MediaObserver.getCurrentSong().getId()), commentText ).update();
+                    new Comment("comment", FirebaseAuth.getInstance().getCurrentUser().getEmail(), RuntimeObserver.getCurrentSong().getSongName()
+                            , Integer.parseInt(RuntimeObserver.getCurrentSong().getId()), commentText ).update();
                     // Create a new CommentItem object and add it to the commentList
                     // Assuming CommentItem is a class that represents a comment with user avatar, name, and content
-                    CommentItem newComment = new CommentItem(0, "Admin", commentText);
+                    CommentItem newComment = new CommentItem(RuntimeObserver.currentUser.iconUrl, RuntimeObserver.currentUser.username, commentText);
                     commentList.add(newComment);
 
                     // Notify the adapter that an item was added to the end of the list
Index: app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CardAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.homePages.Adapter;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.bumptech.glide.Glide;\n\nimport java.io.IOException;\nimport java.util.List;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.models.observer.OnItemSpecClickListener;\n\npublic class CardAdapter extends RecyclerView.Adapter<CardAdapter.CardViewHolder> {\n\n    private List<ItemSpec> itemSpecList;\n    private OnItemSpecClickListener listener;\n\n\n    public CardAdapter(List<ItemSpec> cardDataList, OnItemSpecClickListener listener) {\n\n        this.itemSpecList = cardDataList;\n        this.listener = listener;\n    }\n\n    @NonNull\n    @Override\n    public CardViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_card, parent, false);\n        return new CardViewHolder(view, this);\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull CardViewHolder holder, int position) {\n        ItemSpec itemSpec = itemSpecList.get(position);\n        holder.description.setText(itemSpec.getName());\n\n        // TODO: Load the image into holder.image using an image loading library like Glide or Picasso\n        Glide.with(holder.image.getContext())\n                .load(itemSpec.getImageUrl())\n                .into(holder.image);\n    }\n\n    @Override\n    public int getItemCount() {\n        return itemSpecList.size();\n    }\n\n    static class CardViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {\n\n        ImageView image;\n        TextView description;\n\n        OnItemSpecClickListener listener;\n\n        List<ItemSpec> itemSpecList;\n\n\n        public CardViewHolder(@NonNull View itemView, CardAdapter cardAdapter) {\n            super(itemView);\n            image = itemView.findViewById(R.id.home_hor_cardview_image);\n            description = itemView.findViewById(R.id.home_hor_cardview_description);\n            listener = cardAdapter.listener;\n            itemSpecList = cardAdapter.itemSpecList;\n            itemView.setOnClickListener(this);\n        }\n        @Override\n        public void onClick(View v) {\n            int position = getAdapterPosition();\n            if (position != RecyclerView.NO_POSITION) {\n                try {\n                    listener.onItemClicked(itemSpecList.get(position));\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n    }\n\n    public static String makeImageUrl(int width, int height, String rawUrl){\n        StringBuilder out = new StringBuilder();\n        out.append(rawUrl);\n        int wIndex = out.indexOf(\"{w}\");\n        if (wIndex != -1) {\n            out.replace(wIndex, wIndex + 3, String.valueOf(width));\n        }\n\n        int hIndex = out.indexOf(\"{h}\");\n        if (hIndex != -1) {\n            out.replace(hIndex, hIndex + 3, String.valueOf(height));\n        }\n\n        return out.toString();\n    }\n\n    public static String adjustLength(String text){\n        if(text.length() > 18) return text.substring(0, 17) + \"...\";\n        else return text;\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CardAdapter.java b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CardAdapter.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CardAdapter.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CardAdapter.java	(date 1697081237801)
@@ -15,7 +15,7 @@
 import java.util.List;
 
 import au.edu.anu.Aussic.R;
-import au.edu.anu.Aussic.models.observer.OnItemSpecClickListener;
+import au.edu.anu.Aussic.controller.observer.OnItemSpecClickListener;
 
 public class CardAdapter extends RecyclerView.Adapter<CardAdapter.CardViewHolder> {
 
Index: app/src/main/java/au/edu/anu/Aussic/controller/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.text.method.HideReturnsTransformationMethod;\nimport android.text.method.PasswordTransformationMethod;\nimport android.util.Log;\nimport android.util.Patterns;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.CompoundButton;\nimport android.widget.EditText;\nimport android.widget.Toast;\nimport android.widget.ToggleButton;\n\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.firebase.FirebaseApp;\nimport com.google.firebase.auth.AuthResult;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.controller.homePages.HomeActivity;\n\npublic class LoginActivity extends AppCompatActivity {\n    private EditText username, password;\n    private Button buttonSignIn, buttonSignUp;\n    private FirebaseAuth mAuth;\n    private ToggleButton viewable;\n\n    private static final String TAG = \"EmailPassword\";\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        mAuth = FirebaseAuth.getInstance();\n\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_login);\n\n        username = (EditText) findViewById(R.id.UserName);\n        password = (EditText) findViewById(R.id.UserPassword);\n        buttonSignIn = (Button) findViewById(R.id.SignIN);\n        buttonSignUp = (Button) findViewById(R.id.SignUP);\n        viewable = (ToggleButton) findViewById(R.id.toggleButton);\n\n\n        viewable.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            @Override\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                if(isChecked){\n                    password.setTransformationMethod(HideReturnsTransformationMethod.getInstance());\n                }else{\n                    password.setTransformationMethod(PasswordTransformationMethod.getInstance());\n                }\n            }\n        });\n\n\n        buttonSignIn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                String user_name = username.getText().toString().trim();\n                String pass_word = password.getText().toString().trim();\n                if (user_name.isEmpty()) {\n                    username.setError(\"Email is empty\");\n                    username.requestFocus();\n                    return;\n                }\n                if (!Patterns.EMAIL_ADDRESS.matcher(user_name).matches()) {\n                    username.setError(\"Enter the valid email\");\n                    username.requestFocus();\n                    return;\n                }\n                if (pass_word.isEmpty()) {\n                    password.setError(\"Password is empty\");\n                    password.requestFocus();\n                    return;\n                }\n                if (pass_word.length() < 6) {\n                    password.setError(\"Length of password is more than 6\");\n                    password.requestFocus();\n                    return;\n                }\n                mAuth.signInWithEmailAndPassword(user_name, pass_word).addOnCompleteListener(\n                                new OnCompleteListener<AuthResult>() {\n                            @Override\n                            public void onComplete(@NonNull Task<AuthResult> task) {\n                                if (task.isSuccessful()) {\n                                    // Sign in success, update UI with the signed-in user's information\n                                    Log.d(TAG, \"signInWithEmail:success\");\n                                    FirebaseUser user = mAuth.getCurrentUser();\n\n                                    updateUI(user);\n                                } else {\n                                    // If sign in fails, display a message to the user.\n                                    Log.w(TAG, \"signInWithEmail:failure\", task.getException());\n                                    Toast.makeText(LoginActivity.this, \"Wrong Email Or Password!\",\n                                            Toast.LENGTH_SHORT).show();\n                                    updateUI(null);\n                                }\n                            }\n                        }\n                        );\n            }\n        });\n\n        buttonSignUp.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(LoginActivity.this, SignUpActivity.class);\n                startActivity(intent);\n            }\n        });\n    }\n\n    private void updateUI(FirebaseUser user) {\n        if (user != null) {\n            Intent intent = new Intent(this, HomeActivity.class);\n            intent.putExtra(\"user\", user);\n            startActivity(intent);\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/LoginActivity.java b/app/src/main/java/au/edu/anu/Aussic/controller/LoginActivity.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/LoginActivity.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/LoginActivity.java	(date 1697081237849)
@@ -22,9 +22,14 @@
 import com.google.firebase.auth.AuthResult;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
+import com.squareup.picasso.Picasso;
 
 import au.edu.anu.Aussic.R;
 import au.edu.anu.Aussic.controller.homePages.HomeActivity;
+import au.edu.anu.Aussic.controller.observer.RuntimeObserver;
+import au.edu.anu.Aussic.models.entity.User;
+import au.edu.anu.Aussic.models.firebase.FirestoreDao;
+import au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;
 
 public class LoginActivity extends AppCompatActivity {
     private EditText username, password;
@@ -96,6 +101,16 @@
                                     Log.d(TAG, "signInWithEmail:success");
                                     FirebaseUser user = mAuth.getCurrentUser();
 
+                                    // Load current usr into runtime
+                                    FirestoreDao firestoreDao = new FirestoreDaoImpl();
+                                    firestoreDao.getUserdata(user)
+                                            .thenAccept(userdata -> {
+                                                // Loading the usr icon url
+                                                String iconUrl = (String) userdata.get("iconUrl");
+                                                User newUsr = new User(user_name, iconUrl);
+                                                RuntimeObserver.currentUser = newUsr;
+                                            });
+
                                     updateUI(user);
                                 } else {
                                     // If sign in fails, display a message to the user.
Index: app/src/main/java/au/edu/anu/Aussic/controller/SignUpActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.controller.homePages.HomeActivity;\nimport au.edu.anu.Aussic.models.entity.User;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDao;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;\n\nimport androidx.annotation.NonNull;\n\nimport android.util.Log;\nimport android.util.Patterns;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.firebase.auth.AuthResult;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\nimport com.google.gson.Gson;\nimport com.google.gson.reflect.TypeToken;\n\nimport java.lang.reflect.Type;\nimport java.util.Map;\n\npublic class SignUpActivity extends AppCompatActivity {\n    private Button buttonSignUp, buttonGoBack;\n    private EditText usernameSignUp, passwordSignUp, comfirmPassword;\n    private FirebaseAuth mAuth;\n    private static final String TAG = \"EmailPassword\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sign_up);\n\n        usernameSignUp=findViewById(R.id.signUpUsername);\n        passwordSignUp=findViewById(R.id.signUpPassword);\n        comfirmPassword=findViewById(R.id.comfirmPassword);\n        buttonSignUp=findViewById(R.id.SignUp);\n        buttonGoBack=findViewById(R.id.goBack);\n\n        mAuth=FirebaseAuth.getInstance();\n        buttonSignUp.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                String email = usernameSignUp.getText().toString().trim();\n                String password= passwordSignUp.getText().toString().trim();\n                String comfirmPwd = comfirmPassword.getText().toString().trim();\n\n                if(email.isEmpty())\n                {\n                    usernameSignUp.setError(\"Email is empty\");\n                    usernameSignUp.requestFocus();\n                    return;\n                }\n                if(!Patterns.EMAIL_ADDRESS.matcher(email).matches())\n                {\n                    usernameSignUp.setError(\"Enter the valid email address\");\n                    usernameSignUp.requestFocus();\n                    return;\n                }\n                if(password.isEmpty())\n                {\n                    passwordSignUp.setError(\"Enter the password\");\n                    passwordSignUp.requestFocus();\n                    return;\n                }\n                if(password.length()<6) {\n                    passwordSignUp.setError(\"Length of the password should be more than 6\");\n                    passwordSignUp.requestFocus();\n                    return;\n                }\n                if (!comfirmPwd.equals(password)) {\n                    comfirmPassword.setError(\"Inconsistent password\");\n                    comfirmPassword.requestFocus();\n                    Toast.makeText(SignUpActivity.this, \"The passwords are inconsistent!\", Toast.LENGTH_LONG).show();\n                    return;\n                }\n//\n                mAuth.createUserWithEmailAndPassword(email, password)\n                        .addOnCompleteListener(new OnCompleteListener<AuthResult>() {\n                            @Override\n                            public void onComplete(@NonNull Task<AuthResult> task) {\n                                if (task.isSuccessful()) {\n                                    // Sign in success, update UI with the signed-in user's information\n                                    Log.d(TAG, \"createUserWithEmail:success\");\n                                    FirebaseUser user = mAuth.getCurrentUser();\n                                    //create userdata and upload to firestore\n                                    FirestoreDao firestoreDao = new FirestoreDaoImpl();\n                                    firestoreDao.addUserdata(new User(email, \"https://firebasestorage.googleapis.com/v0/b/aussic-52582.appspot.com/o/icon%2Fdefault.jpg?alt=media\"));\n\n                                    updateUI(user);\n                                } else {\n                                    // If sign in fails, display a message to the user.\n                                    Log.w(TAG, \"createUserWithEmail:failure\", task.getException());\n                                    Toast.makeText(SignUpActivity.this, \"Authentication failed.\",\n                                            Toast.LENGTH_SHORT).show();\n                                    updateUI(null);\n                                }\n                            }\n                        });\n            }\n        });\n\n        buttonGoBack.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(SignUpActivity.this, LoginActivity.class);\n                startActivity(intent);\n            }\n        });\n    }\n\n\n    private void updateUI(FirebaseUser user) {\n        if (user != null) {\n            Intent intent = new Intent(this, HomeActivity.class);\n            intent.putExtra(\"user\", user);\n            startActivity(intent);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/SignUpActivity.java b/app/src/main/java/au/edu/anu/Aussic/controller/SignUpActivity.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/SignUpActivity.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/SignUpActivity.java	(date 1697081237893)
@@ -10,6 +10,7 @@
 import au.edu.anu.Aussic.models.entity.User;
 import au.edu.anu.Aussic.models.firebase.FirestoreDao;
 import au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;
+import au.edu.anu.Aussic.controller.observer.RuntimeObserver;
 
 import androidx.annotation.NonNull;
 
@@ -24,11 +25,6 @@
 import com.google.firebase.auth.AuthResult;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
-import com.google.gson.Gson;
-import com.google.gson.reflect.TypeToken;
-
-import java.lang.reflect.Type;
-import java.util.Map;
 
 public class SignUpActivity extends AppCompatActivity {
     private Button buttonSignUp, buttonGoBack;
@@ -94,9 +90,14 @@
                                     Log.d(TAG, "createUserWithEmail:success");
                                     FirebaseUser user = mAuth.getCurrentUser();
                                     //create userdata and upload to firestore
+
+                                    User newUsr = new User(email, "https://firebasestorage.googleapis.com/v0/b/aussic-52582.appspot.com/o/icon%2Fdefault.jpg?alt=media");
                                     FirestoreDao firestoreDao = new FirestoreDaoImpl();
                                     firestoreDao.addUserdata(new User(email, "https://firebasestorage.googleapis.com/v0/b/aussic-52582.appspot.com/o/icon%2Fdefault.jpg?alt=media"));
 
+                                    // Load current usr into runtime
+                                    RuntimeObserver.currentUser = newUsr;
+
                                     updateUI(user);
                                 } else {
                                     // If sign in fails, display a message to the user.
Index: app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CommentAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.homePages.Adapter;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport java.util.List;\n\nimport au.edu.anu.Aussic.R;\n\npublic class CommentAdapter extends RecyclerView.Adapter<CommentAdapter.CommentViewHolder> {\n\n    private List<CommentItem> commentList;\n\n    public CommentAdapter(List<CommentItem> commentList) {\n        this.commentList = commentList;\n    }\n\n    @NonNull\n    @Override\n    public CommentViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_comment, parent, false);\n        return new CommentViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull CommentViewHolder holder, int position) {\n        CommentItem currentItem = commentList.get(position);\n        holder.userName.setText(currentItem.getUserName());\n        holder.commentContent.setText(currentItem.getCommentContent());\n        //holder.userAvatar.setImageResource(currentItem.getUserAvatarResId());\n    }\n\n    @Override\n    public int getItemCount() {\n        return commentList.size();\n    }\n\n    static class CommentViewHolder extends RecyclerView.ViewHolder {\n        ImageView userAvatar;\n        TextView userName;\n        TextView commentContent;\n\n        public CommentViewHolder(@NonNull View itemView) {\n            super(itemView);\n            userAvatar = itemView.findViewById(R.id.user_avatar);\n            userName = itemView.findViewById(R.id.user_name);\n            commentContent = itemView.findViewById(R.id.user_comment);\n        }\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CommentAdapter.java b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CommentAdapter.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CommentAdapter.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CommentAdapter.java	(date 1697081237825)
@@ -9,6 +9,8 @@
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.bumptech.glide.Glide;
+
 import java.util.List;
 
 import au.edu.anu.Aussic.R;
@@ -34,6 +36,9 @@
         holder.userName.setText(currentItem.getUserName());
         holder.commentContent.setText(currentItem.getCommentContent());
         //holder.userAvatar.setImageResource(currentItem.getUserAvatarResId());
+        Glide.with(holder.userAvatar.getContext())
+                .load(currentItem.getIconUrl())
+                .into(holder.userAvatar);
     }
 
     @Override
Index: app/src/main/java/au/edu/anu/Aussic/controller/homePages/UserPageFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.homePages;\n\nimport android.os.Bundle;\n\nimport androidx.fragment.app.Fragment;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.squareup.picasso.Picasso;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDao;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;\n\n/**\n * A simple {@link Fragment} subclass.\n * Use the {@link UserPageFragment#newInstance} factory method to\n * create an instance of this fragment.\n */\npublic class UserPageFragment extends Fragment {\n\n    // TODO: Rename parameter arguments, choose names that match\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n    private static final String ARG_PARAM1 = \"param1\";\n    private static final String ARG_PARAM2 = \"param2\";\n    private TextView email;\n    private Button favorites, songList;\n    private ImageView userPhoto;\n\n    // TODO: Rename and change types of parameters\n    private String mParam1;\n    private String mParam2;\n\n    public UserPageFragment() {\n        // Required empty public constructor\n    }\n\n    /**\n     * Use this factory method to create a new instance of\n     * this fragment using the provided parameters.\n     *\n     * @param param1 Parameter 1.\n     * @param param2 Parameter 2.\n     * @return A new instance of fragment LibraryFragment.\n     */\n    // TODO: Rename and change types and number of parameters\n    public static UserPageFragment newInstance(String param1, String param2) {\n        UserPageFragment fragment = new UserPageFragment();\n        Bundle args = new Bundle();\n        args.putString(ARG_PARAM1, param1);\n        args.putString(ARG_PARAM2, param2);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            mParam1 = getArguments().getString(ARG_PARAM1);\n            mParam2 = getArguments().getString(ARG_PARAM2);\n        }\n\n\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        View rootView = inflater.inflate(R.layout.fragment_userpage, container, false);\n\n        email = rootView.findViewById(R.id.userEmail);\n        favorites = rootView.findViewById(R.id.favoritesListButton);\n        songList = rootView.findViewById(R.id.songListButton);\n        userPhoto = rootView.findViewById(R.id.userPhoto);\n        //获取并显示用户数据\n        FirestoreDao firestoreDao = new FirestoreDaoImpl();\n        firestoreDao.getUserdata(FirebaseAuth.getInstance().getCurrentUser())\n                .thenAccept(userdata -> {\n                    String username = (String) userdata.get(\"username\");\n                    //显示用户email\n                    email.append(username);\n                    String iconUrl = (String) userdata.get(\"iconUrl\");\n                    Picasso.get().load(iconUrl ).into(userPhoto);\n\n                });\n\n\n        // Example: Click on the profile image to change it\n        userPhoto.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO: Implement functionality to change the profile image\n                Toast.makeText(getContext(), \"Change profile image feature not implemented yet.\", Toast.LENGTH_SHORT).show();\n            }\n        });\n\n        // Click listener for collections list\n        favorites.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO: Navigate to the collections page or implement another functionality\n                Toast.makeText(getContext(), \"Viewing collections!\", Toast.LENGTH_SHORT).show();\n            }\n        });\n\n        // Click listener for playlist\n        songList.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO: Navigate to the playlists page or implement another functionality\n                Toast.makeText(getContext(), \"Viewing playlists!\", Toast.LENGTH_SHORT).show();\n            }\n        });\n        return rootView;\n       // return inflater.inflate(R.layout.fragment_userpage, container, false);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/UserPageFragment.java b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/UserPageFragment.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/UserPageFragment.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/UserPageFragment.java	(date 1697081237817)
@@ -16,6 +16,8 @@
 import com.squareup.picasso.Picasso;
 
 import au.edu.anu.Aussic.R;
+import au.edu.anu.Aussic.controller.observer.RuntimeObserver;
+import au.edu.anu.Aussic.models.entity.User;
 import au.edu.anu.Aussic.models.firebase.FirestoreDao;
 import au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;
 
@@ -82,16 +84,20 @@
         songList = rootView.findViewById(R.id.songListButton);
         userPhoto = rootView.findViewById(R.id.userPhoto);
         //获取并显示用户数据
-        FirestoreDao firestoreDao = new FirestoreDaoImpl();
-        firestoreDao.getUserdata(FirebaseAuth.getInstance().getCurrentUser())
-                .thenAccept(userdata -> {
-                    String username = (String) userdata.get("username");
-                    //显示用户email
-                    email.append(username);
-                    String iconUrl = (String) userdata.get("iconUrl");
-                    Picasso.get().load(iconUrl ).into(userPhoto);
-
-                });
+//        FirestoreDao firestoreDao = new FirestoreDaoImpl();
+//        firestoreDao.getUserdata(FirebaseAuth.getInstance().getCurrentUser())
+//                .thenAccept(userdata -> {
+//                    String username = (String) userdata.get("username");
+//                    //显示用户email
+//                    email.append(username);
+//                    String iconUrl = (String) userdata.get("iconUrl");
+//                    Picasso.get().load(iconUrl ).into(userPhoto);
+//
+//                }
+        // Directly load user data from runtime storage
+        User usr = RuntimeObserver.currentUser;
+        email.append(usr.username);
+        Picasso.get().load(usr.iconUrl).into(userPhoto);
 
 
         // Example: Click on the profile image to change it
Index: app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.homePages;\n\nimport androidx.appcompat.app.ActionBarDrawerToggle;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.SearchView;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.core.view.GravityCompat;\nimport androidx.drawerlayout.widget.DrawerLayout;\n\nimport android.content.Intent;\nimport android.media.MediaPlayer;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.view.Gravity;\n\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport com.google.android.material.navigation.NavigationView;\nimport com.google.firebase.database.core.view.Change;\nimport com.google.gson.Gson;\nimport com.google.gson.JsonArray;\nimport com.google.gson.JsonObject;\nimport com.google.gson.JsonParser;\n\n\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentTransaction;\n\nimport android.app.Dialog;\nimport android.graphics.Color;\nimport android.graphics.drawable.ColorDrawable;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.Window;\nimport android.view.animation.AnimationUtils;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.Toast;\n\nimport java.io.InputStreamReader;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.CardAdapter;\nimport au.edu.anu.Aussic.controller.searchPages.SearchActivity;\nimport au.edu.anu.Aussic.models.observer.ChangeListener;\nimport au.edu.anu.Aussic.models.observer.MediaObserver;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDao;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;\nimport au.edu.anu.Aussic.models.SongLoader.GsonSongLoader;\nimport au.edu.anu.Aussic.models.userAction.UserAction;\nimport au.edu.anu.Aussic.models.userAction.UserActionFactory;\n\n\n\npublic class HomeActivity extends AppCompatActivity implements ChangeListener {\n\n    FloatingActionButton fab;\n    DrawerLayout drawerLayout;\n    BottomNavigationView bottomNavigationView;\n    NavigationView navigationView;\n    private HomeFragment homeFragment = new HomeFragment();\n    private ShortsFragment shortsFragment= new ShortsFragment();\n    private SubscriptionsFragment subscriptionsFragment = new SubscriptionsFragment();\n    private UserPageFragment userPageFragment = new UserPageFragment();\n    private FavoritesFragment favoritesFragment = new FavoritesFragment();\n    private Handler timerHandler = new Handler();\n    private JsonObject jsonObject = null;\n    private JsonArray jsonArray;\n    private int arrayLength = 0;\n    private int currentID = 0;\n    public int currentFragment = R.id.home;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_home);\n        MediaObserver.homeActivity = this;\n        MediaObserver.addChangeListener(this);\n\n        bottomNavigationView = findViewById(R.id.bottomNavigationView);\n        fab =findViewById(R.id.fab);\n        drawerLayout = findViewById(R.id.drawer_layout);\n        navigationView = findViewById(R.id.nav_view);\n        Toolbar toolbar = findViewById(R.id.toolbar);\n\n\n\n        SearchView searchView = findViewById(R.id.searchView);\n\n        // Set an OnClickListener on the SearchView\n        searchView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // Start the SearchActivity\n                Intent intent = new Intent(HomeActivity.this, SearchActivity.class);\n                startActivity(intent);\n            }\n        });\n        // Set the OnClickListener for all children views of SearchView\n        setOnClickListenerForAllChildren(searchView, new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(HomeActivity.this, SearchActivity.class);\n                startActivity(intent);\n            }\n        });\n\n\n        setSupportActionBar(toolbar);\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.open_nav,R.string.close_nav);\n        drawerLayout.addDrawerListener(toggle);\n        toggle.syncState();\n\n        if(savedInstanceState == null){\n            getSupportFragmentManager().beginTransaction().replace(R.id.fragment_layout, homeFragment).commit();\n            navigationView.setCheckedItem(R.id.nav_home);\n        }\n\n        replaceFragment(homeFragment);\n\n        bottomNavigationView.setBackground(null);\n        bottomNavigationView.setOnItemSelectedListener(item -> {\n\n            currentFragment = item.getItemId();\n\n                if(item.getItemId() == R.id.home) replaceFragment(homeFragment);\n\n                else if(item.getItemId() == R.id.shorts) replaceFragment(shortsFragment);\n\n                else if(item.getItemId() == R.id.subscriptions) replaceFragment(subscriptionsFragment);\n\n                else if(item.getItemId() == R.id.library) replaceFragment(userPageFragment);\n\n            return true;\n        });\n\n        navigationView.setNavigationItemSelectedListener(menuItem -> {\n            // Closing the drawer after selecting\n            currentFragment = menuItem.getItemId();\n            drawerLayout.closeDrawer(GravityCompat.START);\n            if(menuItem.getItemId() == R.id.nav_home) replaceFragment(homeFragment);\n            else if (menuItem.getItemId() == R.id.nav_favorites) replaceFragment(favoritesFragment);\n            else if(menuItem.getItemId() == R.id.nav_settings) {\n                //TODO:test\n\n            }\n            else if(menuItem.getItemId() == R.id.nav_share) replaceFragment(subscriptionsFragment);\n            else if(menuItem.getItemId() == R.id.nav_about) replaceFragment(userPageFragment);\n\n            return true;\n        });\n\n        FirestoreDao firestoreDao = new FirestoreDaoImpl();\n        firestoreDao.getRandomSongs(1).thenAccept(results ->{\n            MediaObserver.setCurrentSong(GsonSongLoader.loadSong(results.get(0)));\n            MediaObserver.setMediaPlayer(new MediaPlayer());\n            String urlImage = CardAdapter.makeImageUrl(200, 200, MediaObserver.getCurrentSong().getUrlToImage());\n\n\n            try{\n                MediaObserver.getCurrentMediaPlayer().setDataSource(MediaObserver.getCurrentSong().getUrlToListen());\n                MediaObserver.getCurrentMediaPlayer().prepare();\n                MediaObserver.getCurrentMediaPlayer().setLooping(true);\n                //mediaPlayer.setVolume(1.0f,1.0f);\n            } catch (Exception e){\n                e.printStackTrace();\n            }\n            MediaObserver.getCurrentMediaPlayer().start();\n            fab.setImageResource(R.drawable.ic_bottom_stop);\n            MediaObserver.notifyListeners();\n        });\n\n\n\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                if (MediaObserver.getCurrentMediaPlayer() != null) {\n                    if (MediaObserver.getCurrentMediaPlayer().isPlaying()) {\n                        MediaObserver.getCurrentMediaPlayer().pause();\n                        fab.setImageResource(R.drawable.ic_bottom_play);\n                        if(MediaObserver.roundImage != null) MediaObserver.roundImage.clearAnimation();\n                    } else {\n                        MediaObserver.getCurrentMediaPlayer().start();\n                        fab.setImageResource(R.drawable.ic_bottom_stop);\n                        if((currentFragment == R.id.home || currentFragment == R.id.nav_home) && MediaObserver.roundImage != null) MediaObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(homeFragment.getContext(), R.anim.spinning));\n                    }\n                    //showBottomDialog();\n                }\n            }\n        });\n\n        loadJsonObjectFromRawResource(R.raw.useractions);\n        timerHandler.postDelayed(timerRunnable, 10000);\n    }\n    // Outside Oncreate\n    private void replaceFragment(Fragment fragment) {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\n        fragmentTransaction.replace(R.id.fragment_layout, fragment);\n        fragmentTransaction.commit();\n    }\n\n    private void showBottomDialog() {\n\n        final Dialog dialog = new Dialog(this);\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\n        dialog.setContentView(R.layout.bottomsheetlayout);\n\n        LinearLayout videoLayout = dialog.findViewById(R.id.layoutVideo);\n        LinearLayout shortsLayout = dialog.findViewById(R.id.layoutShorts);\n        LinearLayout liveLayout = dialog.findViewById(R.id.layoutLive);\n        ImageView cancelButton = dialog.findViewById(R.id.cancelButton);\n\n        videoLayout.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                dialog.dismiss();\n                Toast.makeText(HomeActivity.this,\"Upload a Video is clicked\",Toast.LENGTH_SHORT).show();\n\n            }\n        });\n\n        shortsLayout.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                dialog.dismiss();\n                Toast.makeText(HomeActivity.this,\"Create a short is Clicked\",Toast.LENGTH_SHORT).show();\n\n            }\n        });\n\n        liveLayout.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                dialog.dismiss();\n                Toast.makeText(HomeActivity.this,\"Go live is Clicked\",Toast.LENGTH_SHORT).show();\n\n            }\n        });\n\n        cancelButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                dialog.dismiss();\n            }\n        });\n\n        dialog.show();\n        dialog.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;\n        dialog.getWindow().setGravity(Gravity.BOTTOM);\n\n    }\n\n    private Runnable timerRunnable = new Runnable() {\n        @Override\n        public void run() {\n            // load show user behavior every 10 secs\n            loadShowData();\n\n            // Schedule the next execution\n            timerHandler.postDelayed(this, 5000);\n        }\n    };\n    public void loadJsonObjectFromRawResource(int resourceId) {\n        try {\n            // Open the resource stream\n            InputStreamReader reader = new InputStreamReader(getResources().openRawResource(resourceId));\n\n            // Parse the string content to a JsonObject using Gson\n            jsonArray = JsonParser.parseReader(reader).getAsJsonArray();\n            arrayLength = jsonArray.size();\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    private void loadShowData() {\n        FirestoreDao firestoreDao = new FirestoreDaoImpl();\n        firestoreDao.getRandomUseraction().thenAccept(useraction -> {\n            Gson gson = new Gson();\n            JsonObject jsonObject = gson.toJsonTree(useraction).getAsJsonObject();\n            UserAction userAction = UserActionFactory.createUserAction(jsonObject);\n            userAction.update();\n           // Toast.makeText(this, userAction.getToastMessage(), Toast.LENGTH_SHORT).show();\n\n        });\n    }\n\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        if(MediaObserver.getCurrentMediaPlayer() != null){\n            MediaObserver.getCurrentMediaPlayer().release();\n            MediaObserver.setMediaPlayer(null);\n        }\n    }\n\n    private void setOnClickListenerForAllChildren(View parent, View.OnClickListener listener) {\n        if (!(parent instanceof ViewGroup)) {\n            return;\n        }\n        ViewGroup viewGroup = (ViewGroup) parent;\n        for (int i = 0; i < viewGroup.getChildCount(); i++) {\n            View child = viewGroup.getChildAt(i);\n            child.setOnClickListener(listener);\n            setOnClickListenerForAllChildren(child, listener);\n        }\n    }\n\n    @Override\n    public void onChange() {\n        if(MediaObserver.getCurrentMediaPlayer() != null){\n            if ((MediaObserver.getCurrentMediaPlayer().isPlaying())) this.fab.setImageResource(R.drawable.ic_bottom_stop);\n            else this.fab.setImageResource(R.drawable.ic_bottom_play);\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeActivity.java b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeActivity.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeActivity.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeActivity.java	(date 1697081237833)
@@ -16,7 +16,6 @@
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
 import com.google.android.material.navigation.NavigationView;
-import com.google.firebase.database.core.view.Change;
 import com.google.gson.Gson;
 import com.google.gson.JsonArray;
 import com.google.gson.JsonObject;
@@ -43,8 +42,8 @@
 import au.edu.anu.Aussic.R;
 import au.edu.anu.Aussic.controller.homePages.Adapter.CardAdapter;
 import au.edu.anu.Aussic.controller.searchPages.SearchActivity;
-import au.edu.anu.Aussic.models.observer.ChangeListener;
-import au.edu.anu.Aussic.models.observer.MediaObserver;
+import au.edu.anu.Aussic.controller.observer.ChangeListener;
+import au.edu.anu.Aussic.controller.observer.RuntimeObserver;
 import au.edu.anu.Aussic.models.firebase.FirestoreDao;
 import au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;
 import au.edu.anu.Aussic.models.SongLoader.GsonSongLoader;
@@ -68,24 +67,21 @@
     private JsonObject jsonObject = null;
     private JsonArray jsonArray;
     private int arrayLength = 0;
-    private int currentID = 0;
     public int currentFragment = R.id.home;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_home);
-        MediaObserver.homeActivity = this;
-        MediaObserver.addChangeListener(this);
 
+        RuntimeObserver.homeActivity = this;
+        RuntimeObserver.addChangeListener(this);
         bottomNavigationView = findViewById(R.id.bottomNavigationView);
         fab =findViewById(R.id.fab);
         drawerLayout = findViewById(R.id.drawer_layout);
         navigationView = findViewById(R.id.nav_view);
         Toolbar toolbar = findViewById(R.id.toolbar);
 
-
-
         SearchView searchView = findViewById(R.id.searchView);
 
         // Set an OnClickListener on the SearchView
@@ -153,22 +149,20 @@
 
         FirestoreDao firestoreDao = new FirestoreDaoImpl();
         firestoreDao.getRandomSongs(1).thenAccept(results ->{
-            MediaObserver.setCurrentSong(GsonSongLoader.loadSong(results.get(0)));
-            MediaObserver.setMediaPlayer(new MediaPlayer());
-            String urlImage = CardAdapter.makeImageUrl(200, 200, MediaObserver.getCurrentSong().getUrlToImage());
-
+            RuntimeObserver.setCurrentSong(GsonSongLoader.loadSong(results.get(0)));
+            RuntimeObserver.setMediaPlayer(new MediaPlayer());
 
             try{
-                MediaObserver.getCurrentMediaPlayer().setDataSource(MediaObserver.getCurrentSong().getUrlToListen());
-                MediaObserver.getCurrentMediaPlayer().prepare();
-                MediaObserver.getCurrentMediaPlayer().setLooping(true);
+                RuntimeObserver.getCurrentMediaPlayer().setDataSource(RuntimeObserver.getCurrentSong().getUrlToListen());
+                RuntimeObserver.getCurrentMediaPlayer().prepare();
+                RuntimeObserver.getCurrentMediaPlayer().setLooping(true);
                 //mediaPlayer.setVolume(1.0f,1.0f);
             } catch (Exception e){
                 e.printStackTrace();
             }
-            MediaObserver.getCurrentMediaPlayer().start();
+            RuntimeObserver.getCurrentMediaPlayer().start();
             fab.setImageResource(R.drawable.ic_bottom_stop);
-            MediaObserver.notifyListeners();
+            RuntimeObserver.notifyListeners();
         });
 
 
@@ -176,15 +170,15 @@
         fab.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                if (MediaObserver.getCurrentMediaPlayer() != null) {
-                    if (MediaObserver.getCurrentMediaPlayer().isPlaying()) {
-                        MediaObserver.getCurrentMediaPlayer().pause();
+                if (RuntimeObserver.getCurrentMediaPlayer() != null) {
+                    if (RuntimeObserver.getCurrentMediaPlayer().isPlaying()) {
+                        RuntimeObserver.getCurrentMediaPlayer().pause();
                         fab.setImageResource(R.drawable.ic_bottom_play);
-                        if(MediaObserver.roundImage != null) MediaObserver.roundImage.clearAnimation();
+                        if(RuntimeObserver.roundImage != null) RuntimeObserver.roundImage.clearAnimation();
                     } else {
-                        MediaObserver.getCurrentMediaPlayer().start();
+                        RuntimeObserver.getCurrentMediaPlayer().start();
                         fab.setImageResource(R.drawable.ic_bottom_stop);
-                        if((currentFragment == R.id.home || currentFragment == R.id.nav_home) && MediaObserver.roundImage != null) MediaObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(homeFragment.getContext(), R.anim.spinning));
+                        if((currentFragment == R.id.home || currentFragment == R.id.nav_home) && RuntimeObserver.roundImage != null) RuntimeObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(homeFragment.getContext(), R.anim.spinning));
                     }
                     //showBottomDialog();
                 }
@@ -298,9 +292,9 @@
     @Override
     protected void onDestroy() {
         super.onDestroy();
-        if(MediaObserver.getCurrentMediaPlayer() != null){
-            MediaObserver.getCurrentMediaPlayer().release();
-            MediaObserver.setMediaPlayer(null);
+        if(RuntimeObserver.getCurrentMediaPlayer() != null){
+            RuntimeObserver.getCurrentMediaPlayer().release();
+            RuntimeObserver.setMediaPlayer(null);
         }
     }
 
@@ -318,8 +312,8 @@
 
     @Override
     public void onChange() {
-        if(MediaObserver.getCurrentMediaPlayer() != null){
-            if ((MediaObserver.getCurrentMediaPlayer().isPlaying())) this.fab.setImageResource(R.drawable.ic_bottom_stop);
+        if(RuntimeObserver.getCurrentMediaPlayer() != null){
+            if ((RuntimeObserver.getCurrentMediaPlayer().isPlaying())) this.fab.setImageResource(R.drawable.ic_bottom_stop);
             else this.fab.setImageResource(R.drawable.ic_bottom_play);
         }
     }
Index: app/src/main/java/au/edu/anu/Aussic/models/observer/MediaObserver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/models/observer/MediaObserver.java b/app/src/main/java/au/edu/anu/Aussic/controller/observer/RuntimeObserver.java
rename from app/src/main/java/au/edu/anu/Aussic/models/observer/MediaObserver.java
rename to app/src/main/java/au/edu/anu/Aussic/controller/observer/RuntimeObserver.java
--- a/app/src/main/java/au/edu/anu/Aussic/models/observer/MediaObserver.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/observer/RuntimeObserver.java	(date 1697081237873)
@@ -1,4 +1,4 @@
-package au.edu.anu.Aussic.models.observer;
+package au.edu.anu.Aussic.controller.observer;
 
 import android.media.MediaPlayer;
 import android.widget.ImageView;
@@ -9,13 +9,15 @@
 import au.edu.anu.Aussic.controller.homePages.HomeActivity;
 import au.edu.anu.Aussic.controller.homePages.HomeFragment;
 import au.edu.anu.Aussic.models.entity.Song;
+import au.edu.anu.Aussic.models.entity.User;
 
 /**
  * The class for song playing and pausing
  */
-public class MediaObserver {
+public class RuntimeObserver {
     private static MediaPlayer currentMediaPlayer;
     private static Song currentSong;
+    public static User currentUser;
     public static ImageView roundImage;
     public static HomeFragment homeFragment;
     public static HomeActivity homeActivity;
@@ -48,5 +50,8 @@
 
     public static void notifyListeners() {
         for (ChangeListener listener : listeners) listener.onChange();
+    }
+    public static void realTimeNotifyListeners(){
+
     }
 }
Index: app/src/main/java/au/edu/anu/Aussic/models/observer/OnItemSpecClickListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/models/observer/OnItemSpecClickListener.java b/app/src/main/java/au/edu/anu/Aussic/controller/observer/OnItemSpecClickListener.java
rename from app/src/main/java/au/edu/anu/Aussic/models/observer/OnItemSpecClickListener.java
rename to app/src/main/java/au/edu/anu/Aussic/controller/observer/OnItemSpecClickListener.java
--- a/app/src/main/java/au/edu/anu/Aussic/models/observer/OnItemSpecClickListener.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/observer/OnItemSpecClickListener.java	(date 1697081237901)
@@ -1,4 +1,4 @@
-package au.edu.anu.Aussic.models.observer;
+package au.edu.anu.Aussic.controller.observer;
 
 import java.io.IOException;
 
Index: app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/ListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.homePages.Adapter;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.RequestOptions;\n\nimport java.io.IOException;\nimport java.util.List;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.models.observer.OnItemSpecClickListener;\n\npublic class ListAdapter extends RecyclerView.Adapter<ListAdapter.ListViewHolder> {\n\n    private List<ItemSpec> items;\n    private OnItemSpecClickListener listener;\n\n\n    public ListAdapter(List<ItemSpec> items, OnItemSpecClickListener listener) {\n        this.items = items;\n        this.listener = listener;\n    }\n\n    @Override\n    public ListViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_layout, parent, false);\n        return new ListViewHolder(itemView, this);\n    }\n\n    @Override\n    public void onBindViewHolder(ListViewHolder holder, int position) {\n        ItemSpec itemSpec = items.get(position);\n        holder.listTitle.setText(itemSpec.getName());\n        holder.listArtist.setText(itemSpec.getArtistName());\n\n        // Load image from the web using Glide\n        Glide.with(holder.listImage.getContext())\n                .load(itemSpec.getImageUrl())\n                .apply(new RequestOptions().override((int)(360 * 0.8), (int)(360 * 0.8)))\n                .into(holder.listImage);\n    }\n\n    @Override\n    public int getItemCount() {\n        return items.size();\n    }\n\n    public class ListViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {\n        public ImageView listImage;\n        public TextView listTitle;\n        public TextView listArtist;\n        private List<ItemSpec> items;\n        private OnItemSpecClickListener listener;\n\n        public ListViewHolder(View view, ListAdapter listAdapter) {\n            super(view);\n            listImage = view.findViewById(R.id.item_image);\n            listTitle = view.findViewById(R.id.item_title);\n            listArtist = view.findViewById(R.id.item_artist);\n            items = listAdapter.items;\n            listener = listAdapter.listener;\n            view.setOnClickListener(this);\n        }\n\n        @Override\n        public void onClick(View v) {\n            int position = getAdapterPosition();\n            if (position != RecyclerView.NO_POSITION) {\n                try {\n                    listener.onItemClicked(items.get(position));\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/ListAdapter.java b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/ListAdapter.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/ListAdapter.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/ListAdapter.java	(date 1697081237857)
@@ -1,6 +1,5 @@
 package au.edu.anu.Aussic.controller.homePages.Adapter;
 
-import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -16,7 +15,7 @@
 import java.util.List;
 
 import au.edu.anu.Aussic.R;
-import au.edu.anu.Aussic.models.observer.OnItemSpecClickListener;
+import au.edu.anu.Aussic.controller.observer.OnItemSpecClickListener;
 
 public class ListAdapter extends RecyclerView.Adapter<ListAdapter.ListViewHolder> {
 
Index: app/src/main/java/au/edu/anu/Aussic/controller/searchPages/GenreSearchFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.searchPages;\n\nimport android.os.Bundle;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.CardAdapter;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.ItemSpec;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.ListAdapter;\nimport au.edu.anu.Aussic.models.entity.Song;\nimport au.edu.anu.Aussic.models.observer.ChangeListener;\nimport au.edu.anu.Aussic.models.observer.MediaObserver;\n\n/**\n * A simple {@link Fragment} subclass.\n * Use the {@link GenreSearchFragment#newInstance} factory method to\n * create an instance of this fragment.\n */\npublic class GenreSearchFragment extends Fragment {\n\n    // TODO: Rename parameter arguments, choose names that match\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n    private static final String ARG_PARAM1 = \"param1\";\n    private static final String ARG_PARAM2 = \"param2\";\n\n    // TODO: Rename and change types of parameters\n    private String mParam1;\n    private String mParam2;\n\n\n    public GenreSearchFragment() {\n        // Required empty public constructor\n    }\n\n    /**\n     * Use this factory method to create a new instance of\n     * this fragment using the provided parameters.\n     *\n     * @param param1 Parameter 1.\n     * @param param2 Parameter 2.\n     * @return A new instance of fragment GenreFragment.\n     */\n    // TODO: Rename and change types and number of parameters\n    public static GenreSearchFragment newInstance(String param1, String param2) {\n        GenreSearchFragment fragment = new GenreSearchFragment();\n        Bundle args = new Bundle();\n        args.putString(ARG_PARAM1, param1);\n        args.putString(ARG_PARAM2, param2);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            mParam1 = getArguments().getString(ARG_PARAM1);\n            mParam2 = getArguments().getString(ARG_PARAM2);\n        }\n    }\n\n    @Override\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        return inflater.inflate(R.layout.fragment_genre_search, container, false);\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/GenreSearchFragment.java b/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/GenreSearchFragment.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/GenreSearchFragment.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/GenreSearchFragment.java	(date 1697081237909)
@@ -5,23 +5,12 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
 
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
-import java.util.ArrayList;
-import java.util.List;
-
 import au.edu.anu.Aussic.R;
-import au.edu.anu.Aussic.controller.homePages.Adapter.CardAdapter;
-import au.edu.anu.Aussic.controller.homePages.Adapter.ItemSpec;
-import au.edu.anu.Aussic.controller.homePages.Adapter.ListAdapter;
-import au.edu.anu.Aussic.models.entity.Song;
-import au.edu.anu.Aussic.models.observer.ChangeListener;
-import au.edu.anu.Aussic.models.observer.MediaObserver;
 
 /**
  * A simple {@link Fragment} subclass.
Index: app/src/main/java/au/edu/anu/Aussic/controller/searchPages/SearchActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.searchPages;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.annotation.SuppressLint;\nimport android.content.res.ColorStateList;\nimport android.graphics.drawable.Drawable;\nimport android.graphics.drawable.RippleDrawable;\nimport android.media.MediaPlayer;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.animation.AnimationUtils;\nimport android.widget.Button;\nimport android.widget.Toast;\n\nimport androidx.appcompat.widget.SearchView;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentTransaction;\n\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport com.google.android.material.tabs.TabLayout;\nimport com.google.gson.Gson;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.models.observer.ChangeListener;\nimport au.edu.anu.Aussic.models.observer.MediaObserver;\nimport au.edu.anu.Aussic.models.entity.Song;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDao;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;\nimport au.edu.anu.Aussic.models.parserAndTokenizer.Parser;\n\npublic class SearchActivity extends AppCompatActivity implements ChangeListener {\n    private MediaPlayer mediaPlayer;\n    private Button searchButton;\n    private SearchView searchView;\n    private TabLayout tabs;\n    private int sortID;\n    private int fragmentID;\n    private GeneralSearchFragment generalSearch;\n    private SongSearchFragment songSearch;\n    private ArtistSearchFragment artistSearch;\n    private GenreSearchFragment genreSearch;\n    private FloatingActionButton fab;\n\n\n    @SuppressLint(\"ResourceAsColor\")\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_search);\n        fab = findViewById(R.id.search_fab);\n        searchButton = findViewById(R.id.btn_search);\n        searchView = findViewById(R.id.searchView_search);\n\n        this.generalSearch = new GeneralSearchFragment();\n        this.songSearch = new SongSearchFragment();\n        this.artistSearch = new ArtistSearchFragment();\n        this.genreSearch = new GenreSearchFragment();\n\n        this.tabs = findViewById(R.id.tabs);\n\n        for(int i = 0; i < 2; i++)  setTabColor(i, R.drawable.ic_tabs_trans_bg_alt);\n        for(int i = 2; i < 6; i++)  setTabColor(i, R.drawable.ic_tabs_trans_bg);\n\n        // Select general for the first init\n        // Sort by Likes for the first init\n        setTabColor(2, R.drawable.ic_tabs_bg);\n        setTabColor(0, R.drawable.ic_tabs_bg_alt);\n        this.fragmentID = 2;\n        this.sortID = 0;\n        replaceFragment(generalSearch);\n\n        tabs.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\n            @Override\n            public void onTabSelected(TabLayout.Tab tab) {\n\n                int selectedTabIndex = tab.getPosition();\n                if(selectedTabIndex > 1) {\n                    setTabColor(fragmentID, R.drawable.ic_tabs_trans_bg);\n                    fragmentID = selectedTabIndex;\n                }\n                else {\n                    setTabColor(sortID, R.drawable.ic_tabs_trans_bg_alt);\n                    sortID = selectedTabIndex;\n                }\n                switch (selectedTabIndex) {\n                    case 0:\n                        // Actions for \"Likes\" tab\n                        setTabColor(0, R.drawable.ic_tabs_bg_alt);\n                        break;\n                    case 1:\n                        // Actions for \"Comments\" tab\n                        setTabColor(1, R.drawable.ic_tabs_bg_alt);\n                        break;\n                    case 2:\n                        // Actions for \"General\" tab\n                        setTabColor(2, R.drawable.ic_tabs_bg);\n                        replaceFragment(generalSearch);\n                        break;\n                    case 3:\n                        setTabColor(3, R.drawable.ic_tabs_bg);\n                        replaceFragment(songSearch);\n                        // Actions for \"Song\" tab\n                        break;\n                    case 4:\n                        setTabColor(4, R.drawable.ic_tabs_bg);\n                        replaceFragment(artistSearch);\n                        // Actions for \"Artist\" tab\n                        break;\n                    case 5:\n                        setTabColor(5, R.drawable.ic_tabs_bg);\n                        replaceFragment(genreSearch);\n                        // Actions for \"Genre\" tab\n                        break;\n                    // Add more cases if there are more tabs\n                }\n            }\n\n            @Override\n            public void onTabUnselected(TabLayout.Tab tab) {}\n\n            @Override\n            public void onTabReselected(TabLayout.Tab tab){}\n        });\n\n\n        searchView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // Request focus and show the soft keyboard\n                searchView.setIconified(false);\n            }\n        });\n\n        MediaObserver.addChangeListener(this);\n\n        this.mediaPlayer = MediaObserver.getCurrentMediaPlayer();\n\n        if(mediaPlayer != null) {\n            if (this.mediaPlayer.isPlaying()) fab.setImageResource(R.drawable.ic_bottom_stop);\n            else fab.setImageResource(R.drawable.ic_bottom_play);\n        }\n\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                if (mediaPlayer != null) {\n                    if (mediaPlayer.isPlaying()) {\n                        mediaPlayer.pause();\n                        fab.setImageResource(R.drawable.ic_bottom_play);\n                        if(MediaObserver.roundImage != null) MediaObserver.roundImage.clearAnimation();\n                    } else {\n                        mediaPlayer.start();\n                        fab.setImageResource(R.drawable.ic_bottom_stop);\n                        if((MediaObserver.homeActivity.currentFragment == R.id.home || MediaObserver.homeActivity.currentFragment == R.id.nav_home) && MediaObserver.roundImage != null) MediaObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(MediaObserver.homeFragment.getContext(), R.anim.spinning));\n                    }\n                    //showBottomDialog();\n                }\n            }\n        });\n\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\n            @Override\n            public boolean onQueryTextSubmit(String input) {\n                // The IME action was detected, perform the same action as your search button\n                doSearch(input);\n                return true;\n            }\n\n            @Override\n            public boolean onQueryTextChange(String newText) {\n                // Handle real-time query changes if needed\n                return false;\n            }\n        });\n\n        searchButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                String query = searchView.getQuery().toString();\n                doSearch(query);\n            }\n        });\n\n\n    }\n\n    private void doSearch(String input){\n        // hide the keyboard when button is clicked\n        searchView.setQuery(\"\", false); // Set the query text to an empty string\n        searchView.setIconified(true);\n        searchView.setIconified(true);\n\n        //把搜索框中的查询传给parser，在parser里转成map然后调用firestoreDao.searchSongs(terms)\n        Parser parser = new Parser(input);\n\n        Map<String, Object> terms = new HashMap<>();\n        terms.put(\"artistName\", \"INXS\");\n        terms.put(\"name\", \"Devil's Party (Slick Mix)\");\n        terms.put(\"releaseDate\", null);\n\n\n        FirestoreDao firestoreDao = new FirestoreDaoImpl();\n//        firestoreDao.searchSongs(terms).thenAccept(results -> {\n//            //拿到查询结果后处理，放入listview\n//\n//        });\n\n        List<Map<String, Object>> songs = new ArrayList<>();\n        //String a = firestoreDao.getRandomSong().toString();\n        firestoreDao.getRandomSongs(100).thenAccept(results ->{\n\n            songs.addAll(results);\n\n            Object attributes = songs.get(0).get(\"attributes\");\n            Object artwork = ((Map<String, Object>) attributes).get(\"artwork\");\n            String urlToImage = ((Map<String, Object>) artwork).get(\"url\").toString();\n            Map<String, Object> a = songs.get(0);\n            Gson gson = new Gson();\n            String jsonData = gson.toJson(a);\n            Song song = gson.fromJson(jsonData, Song.class);\n\n//            Song song = new Song(songs.get(0));\n\n            Toast.makeText(this, urlToImage, Toast.LENGTH_SHORT).show();\n        });\n\n\n        \n\n    }\n\n    private void setTabColor(int index, int drawable) {\n        View tabView = ((ViewGroup) tabs.getChildAt(0)).getChildAt(index);\n\n        Drawable background = tabView.getBackground();\n\n        RippleDrawable oldRippleDrawable = (RippleDrawable) background;\n\n        // Extract ripple color from the old ripple drawable\n        ColorStateList rippleColor = oldRippleDrawable.getEffectColor();\n\n        // Create new RippleDrawable\n        RippleDrawable newRippleDrawable = new RippleDrawable(rippleColor, getResources().getDrawable(drawable), null);\n\n        // Set the new background\n        tabView.setBackground(newRippleDrawable);\n    }\n\n    private void replaceFragment(Fragment fragment) {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\n        fragmentTransaction.replace(R.id.fragment_layout, fragment);\n        fragmentTransaction.commit();\n    }\n\n    @Override\n    public void onChange(){\n        this.mediaPlayer = MediaObserver.getCurrentMediaPlayer();\n        if (mediaPlayer.isPlaying()) this.fab.setImageResource(R.drawable.ic_bottom_stop);\n        else this.fab.setImageResource(R.drawable.ic_bottom_play);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/SearchActivity.java b/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/SearchActivity.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/SearchActivity.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/SearchActivity.java	(date 1697081237797)
@@ -29,8 +29,8 @@
 import java.util.Map;
 
 import au.edu.anu.Aussic.R;
-import au.edu.anu.Aussic.models.observer.ChangeListener;
-import au.edu.anu.Aussic.models.observer.MediaObserver;
+import au.edu.anu.Aussic.controller.observer.ChangeListener;
+import au.edu.anu.Aussic.controller.observer.RuntimeObserver;
 import au.edu.anu.Aussic.models.entity.Song;
 import au.edu.anu.Aussic.models.firebase.FirestoreDao;
 import au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;
@@ -139,9 +139,9 @@
             }
         });
 
-        MediaObserver.addChangeListener(this);
+        RuntimeObserver.addChangeListener(this);
 
-        this.mediaPlayer = MediaObserver.getCurrentMediaPlayer();
+        this.mediaPlayer = RuntimeObserver.getCurrentMediaPlayer();
 
         if(mediaPlayer != null) {
             if (this.mediaPlayer.isPlaying()) fab.setImageResource(R.drawable.ic_bottom_stop);
@@ -155,11 +155,11 @@
                     if (mediaPlayer.isPlaying()) {
                         mediaPlayer.pause();
                         fab.setImageResource(R.drawable.ic_bottom_play);
-                        if(MediaObserver.roundImage != null) MediaObserver.roundImage.clearAnimation();
+                        if(RuntimeObserver.roundImage != null) RuntimeObserver.roundImage.clearAnimation();
                     } else {
                         mediaPlayer.start();
                         fab.setImageResource(R.drawable.ic_bottom_stop);
-                        if((MediaObserver.homeActivity.currentFragment == R.id.home || MediaObserver.homeActivity.currentFragment == R.id.nav_home) && MediaObserver.roundImage != null) MediaObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(MediaObserver.homeFragment.getContext(), R.anim.spinning));
+                        if((RuntimeObserver.homeActivity.currentFragment == R.id.home || RuntimeObserver.homeActivity.currentFragment == R.id.nav_home) && RuntimeObserver.roundImage != null) RuntimeObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(RuntimeObserver.homeFragment.getContext(), R.anim.spinning));
                     }
                     //showBottomDialog();
                 }
@@ -263,7 +263,7 @@
 
     @Override
     public void onChange(){
-        this.mediaPlayer = MediaObserver.getCurrentMediaPlayer();
+        this.mediaPlayer = RuntimeObserver.getCurrentMediaPlayer();
         if (mediaPlayer.isPlaying()) this.fab.setImageResource(R.drawable.ic_bottom_stop);
         else this.fab.setImageResource(R.drawable.ic_bottom_play);
     }
Index: app/src/main/java/au/edu/anu/Aussic/controller/searchPages/GeneralSearchFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.searchPages;\n\nimport android.content.Intent;\nimport android.media.MediaPlayer;\nimport android.os.Bundle;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.CardAdapter;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.ItemSpec;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.ListAdapter;\nimport au.edu.anu.Aussic.controller.songPages.SongActivity;\nimport au.edu.anu.Aussic.models.entity.Song;\nimport au.edu.anu.Aussic.models.observer.ChangeListener;\nimport au.edu.anu.Aussic.models.observer.MediaObserver;\nimport au.edu.anu.Aussic.models.observer.OnItemSpecClickListener;\n\n/**\n * A simple {@link Fragment} subclass.\n * Use the {@link GeneralSearchFragment#newInstance} factory method to\n * create an instance of this fragment.\n */\npublic class GeneralSearchFragment extends Fragment implements ChangeListener, OnItemSpecClickListener {\n\n    // TODO: Rename parameter arguments, choose names that match\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n    private static final String ARG_PARAM1 = \"param1\";\n    private static final String ARG_PARAM2 = \"param2\";\n\n    // TODO: Rename and change types of parameters\n    private String mParam1;\n    private String mParam2;\n    private RecyclerView searchRecyclerView;\n\n    public GeneralSearchFragment() {\n        // Required empty public constructor\n        MediaObserver.addChangeListener(this);\n    }\n\n    /**\n     * Use this factory method to create a new instance of\n     * this fragment using the provided parameters.\n     *\n     * @param param1 Parameter 1.\n     * @param param2 Parameter 2.\n     * @return A new instance of fragment AllTypesFragment.\n     */\n    // TODO: Rename and change types and number of parameters\n    public static GeneralSearchFragment newInstance(String param1, String param2) {\n        GeneralSearchFragment fragment = new GeneralSearchFragment();\n        Bundle args = new Bundle();\n        args.putString(ARG_PARAM1, param1);\n        args.putString(ARG_PARAM2, param2);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            mParam1 = getArguments().getString(ARG_PARAM1);\n            mParam2 = getArguments().getString(ARG_PARAM2);\n        }\n    }\n\n    @Override\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        this.searchRecyclerView = view.findViewById(R.id.search_list_recyclerView);\n        onChange();\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        return inflater.inflate(R.layout.fragment_general_search, container, false);\n    }\n\n    @Override\n    public void onChange() {\n        if(MediaObserver.getCurrentSongList() != null && !MediaObserver.getCurrentSongList().isEmpty()) {\n            List<ItemSpec> itemList = new ArrayList<>();\n            for (Song song : MediaObserver.getCurrentSongList())\n                itemList.add(new ItemSpec(CardAdapter.adjustLength(song.getSongName()), CardAdapter.makeImageUrl(200, 200, song.getUrlToImage()), song.getArtistName(), song));\n\n            this.searchRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\n            this.searchRecyclerView.setAdapter(new ListAdapter(itemList, this));\n        }\n    }\n\n    @Override\n    public void onItemClicked(ItemSpec itemSpec) throws IOException {\n        MediaObserver.setCurrentSong(itemSpec.getSong());\n        MediaObserver.getCurrentMediaPlayer().pause();\n        MediaObserver.getCurrentMediaPlayer().release();\n        MediaObserver.setMediaPlayer(new MediaPlayer());\n        MediaObserver.getCurrentMediaPlayer().setDataSource(itemSpec.getSong().getUrlToListen());\n        MediaObserver.getCurrentMediaPlayer().prepare();\n        MediaObserver.getCurrentMediaPlayer().setLooping(true);\n        MediaObserver.getCurrentMediaPlayer().start();\n        Intent intent = new Intent(getContext(), SongActivity.class);\n        // add more extras if necessary\n        startActivity(intent);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/GeneralSearchFragment.java b/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/GeneralSearchFragment.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/GeneralSearchFragment.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/GeneralSearchFragment.java	(date 1697081237789)
@@ -24,9 +24,9 @@
 import au.edu.anu.Aussic.controller.homePages.Adapter.ListAdapter;
 import au.edu.anu.Aussic.controller.songPages.SongActivity;
 import au.edu.anu.Aussic.models.entity.Song;
-import au.edu.anu.Aussic.models.observer.ChangeListener;
-import au.edu.anu.Aussic.models.observer.MediaObserver;
-import au.edu.anu.Aussic.models.observer.OnItemSpecClickListener;
+import au.edu.anu.Aussic.controller.observer.ChangeListener;
+import au.edu.anu.Aussic.controller.observer.RuntimeObserver;
+import au.edu.anu.Aussic.controller.observer.OnItemSpecClickListener;
 
 /**
  * A simple {@link Fragment} subclass.
@@ -47,7 +47,7 @@
 
     public GeneralSearchFragment() {
         // Required empty public constructor
-        MediaObserver.addChangeListener(this);
+        RuntimeObserver.addChangeListener(this);
     }
 
     /**
@@ -93,9 +93,9 @@
 
     @Override
     public void onChange() {
-        if(MediaObserver.getCurrentSongList() != null && !MediaObserver.getCurrentSongList().isEmpty()) {
+        if(RuntimeObserver.getCurrentSongList() != null && !RuntimeObserver.getCurrentSongList().isEmpty()) {
             List<ItemSpec> itemList = new ArrayList<>();
-            for (Song song : MediaObserver.getCurrentSongList())
+            for (Song song : RuntimeObserver.getCurrentSongList())
                 itemList.add(new ItemSpec(CardAdapter.adjustLength(song.getSongName()), CardAdapter.makeImageUrl(200, 200, song.getUrlToImage()), song.getArtistName(), song));
 
             this.searchRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
@@ -105,14 +105,14 @@
 
     @Override
     public void onItemClicked(ItemSpec itemSpec) throws IOException {
-        MediaObserver.setCurrentSong(itemSpec.getSong());
-        MediaObserver.getCurrentMediaPlayer().pause();
-        MediaObserver.getCurrentMediaPlayer().release();
-        MediaObserver.setMediaPlayer(new MediaPlayer());
-        MediaObserver.getCurrentMediaPlayer().setDataSource(itemSpec.getSong().getUrlToListen());
-        MediaObserver.getCurrentMediaPlayer().prepare();
-        MediaObserver.getCurrentMediaPlayer().setLooping(true);
-        MediaObserver.getCurrentMediaPlayer().start();
+        RuntimeObserver.setCurrentSong(itemSpec.getSong());
+        RuntimeObserver.getCurrentMediaPlayer().pause();
+        RuntimeObserver.getCurrentMediaPlayer().release();
+        RuntimeObserver.setMediaPlayer(new MediaPlayer());
+        RuntimeObserver.getCurrentMediaPlayer().setDataSource(itemSpec.getSong().getUrlToListen());
+        RuntimeObserver.getCurrentMediaPlayer().prepare();
+        RuntimeObserver.getCurrentMediaPlayer().setLooping(true);
+        RuntimeObserver.getCurrentMediaPlayer().start();
         Intent intent = new Intent(getContext(), SongActivity.class);
         // add more extras if necessary
         startActivity(intent);
Index: app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CommentItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.homePages.Adapter;\n\npublic class CommentItem {\n    private int userAvatarResId;  // Let's assume it's a drawable resource ID for simplicity\n    private String userName;\n    private String commentContent;\n\n    public CommentItem(int userAvatarResId, String userName, String commentContent) {\n        this.userAvatarResId = userAvatarResId;\n        this.userName = userName;\n        this.commentContent = commentContent;\n    }\n\n    // Getters\n    public int getUserAvatarResId() {\n        return userAvatarResId;\n    }\n\n    public String getUserName() {\n        return userName;\n    }\n\n    public String getCommentContent() {\n        return commentContent;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CommentItem.java b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CommentItem.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CommentItem.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/Adapter/CommentItem.java	(date 1697081237869)
@@ -1,19 +1,19 @@
 package au.edu.anu.Aussic.controller.homePages.Adapter;
 
 public class CommentItem {
-    private int userAvatarResId;  // Let's assume it's a drawable resource ID for simplicity
+    private String iconUrl;  // Let's assume it's a drawable resource ID for simplicity
     private String userName;
     private String commentContent;
 
-    public CommentItem(int userAvatarResId, String userName, String commentContent) {
-        this.userAvatarResId = userAvatarResId;
+    public CommentItem(String iconUrl, String userName, String commentContent) {
+        this.iconUrl = iconUrl;
         this.userName = userName;
         this.commentContent = commentContent;
     }
 
     // Getters
-    public int getUserAvatarResId() {
-        return userAvatarResId;
+    public String getIconUrl() {
+        return iconUrl;
     }
 
     public String getUserName() {
Index: app/src/main/java/au/edu/anu/Aussic/models/observer/ChangeListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/models/observer/ChangeListener.java b/app/src/main/java/au/edu/anu/Aussic/controller/observer/ChangeListener.java
rename from app/src/main/java/au/edu/anu/Aussic/models/observer/ChangeListener.java
rename to app/src/main/java/au/edu/anu/Aussic/controller/observer/ChangeListener.java
--- a/app/src/main/java/au/edu/anu/Aussic/models/observer/ChangeListener.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/observer/ChangeListener.java	(date 1697081237917)
@@ -1,6 +1,7 @@
-package au.edu.anu.Aussic.models.observer;
+package au.edu.anu.Aussic.controller.observer;
 
 
 public interface ChangeListener {
     void onChange();
+
 }
Index: app/src/main/java/au/edu/anu/Aussic/models/entity/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.models.entity;\n\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n//用户注册后新建user上传firestore\n//登陆之后把用户id传给homeactivity，实例化个人主页fragment的时候再传，然后在fragment初始化的时候根据用户id从firebastore获取用户信息展示出来\npublic class User {\n    String username;\n    List<String> favorites = new ArrayList<>(); //放歌曲id\n    List<String> likes = new ArrayList<>();\n    String location = \"\";\n    String iconUrl;\n\n    public User(String username, String iconUrl) {\n        this.username = username;\n        this.iconUrl = iconUrl;\n    }\n\n    public void update(){};  //更新数据库里的user数据\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/models/entity/User.java b/app/src/main/java/au/edu/anu/Aussic/models/entity/User.java
--- a/app/src/main/java/au/edu/anu/Aussic/models/entity/User.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/models/entity/User.java	(date 1697081237861)
@@ -4,14 +4,15 @@
 import java.util.ArrayList;
 import java.util.List;
 
+
 //用户注册后新建user上传firestore
 //登陆之后把用户id传给homeactivity，实例化个人主页fragment的时候再传，然后在fragment初始化的时候根据用户id从firebastore获取用户信息展示出来
 public class User {
-    String username;
-    List<String> favorites = new ArrayList<>(); //放歌曲id
-    List<String> likes = new ArrayList<>();
+    public String username;
+    public List<String> favorites = new ArrayList<>(); //放歌曲id
+    public List<String> likes = new ArrayList<>();
     String location = "";
-    String iconUrl;
+    public String iconUrl;
 
     public User(String username, String iconUrl) {
         this.username = username;
Index: app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.homePages;\n\nimport android.content.Intent;\nimport android.media.MediaPlayer;\nimport android.os.Bundle;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.animation.AnimationUtils;\nimport android.widget.TextView;\n\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.RequestOptions;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.CardAdapter;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.ItemSpec;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.ListAdapter;\nimport au.edu.anu.Aussic.controller.searchPages.SearchActivity;\nimport au.edu.anu.Aussic.controller.songPages.SongActivity;\nimport au.edu.anu.Aussic.models.SongLoader.GsonSongLoader;\nimport au.edu.anu.Aussic.models.entity.Song;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDao;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;\nimport au.edu.anu.Aussic.models.observer.ChangeListener;\nimport au.edu.anu.Aussic.models.observer.MediaObserver;\nimport au.edu.anu.Aussic.models.observer.OnItemSpecClickListener;\n\n/**\n * A simple {@link Fragment} subclass.\n * Use the {@link HomeFragment#newInstance} factory method to\n * create an instance of this fragment.\n */\npublic class HomeFragment extends Fragment implements OnItemSpecClickListener, ChangeListener {\n\n    // TODO: Rename parameter arguments, choose names that match\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n    private static final String ARG_PARAM1 = \"param1\";\n    private static final String ARG_PARAM2 = \"param2\";\n\n    // TODO: Rename and change types of parameters\n    private String mParam1;\n    private String mParam2;\n    private RecyclerView cardRecyclerView;\n    private RecyclerView listRecyclerView;\n    private TextView roundUnderText;\n\n    public HomeFragment() {\n        // Required empty public constructor\n        MediaObserver.homeFragment = this;\n        MediaObserver.addChangeListener(this);\n    }\n\n    /**\n     * Use this factory method to create a new instance of\n     * this fragment using the provided parameters.\n     *\n     * @param param1 Parameter 1.\n     * @param param2 Parameter 2.\n     * @return A new instance of fragment HomeFragment.\n     */\n    // TODO: Rename and change types and number of parameters\n    public static HomeFragment newInstance(String param1, String param2) {\n        HomeFragment fragment = new HomeFragment();\n        Bundle args = new Bundle();\n        args.putString(ARG_PARAM1, param1);\n        args.putString(ARG_PARAM2, param2);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n\n        this.cardRecyclerView = view.findViewById(R.id.card_recyclerView);\n        this.listRecyclerView = view.findViewById(R.id.list_recyclerView);\n        this.roundUnderText = view.findViewById(R.id.round_image_name);\n        MediaObserver.roundImage = view.findViewById(R.id.spinning_round_image);\n        MediaObserver.roundImage.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n\n                Intent intent = new Intent(getContext(), SongActivity.class);\n                startActivity(intent);\n            }\n        });\n\n\n        if(MediaObserver.getCurrentSongList() == null || MediaObserver.getCurrentSongList().isEmpty()){\n            FirestoreDao firestoreDao = new FirestoreDaoImpl();\n            firestoreDao.getRandomSongs(10).thenAccept(results->{\n                List<Map<String, Object>> maps = new ArrayList<>();\n                maps.addAll(results);\n                setViewList(maps);\n                MediaObserver.notifyListeners();\n            });\n        } else {\n            setViewList();\n        }\n\n\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            mParam1 = getArguments().getString(ARG_PARAM1);\n            mParam2 = getArguments().getString(ARG_PARAM2);\n        }\n\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        return inflater.inflate(R.layout.fragment_home, container, false);\n    }\n\n    public void setViewList(){\n        cardRecyclerView.setLayoutManager(new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false));\n        List<ItemSpec> itemList = new ArrayList<>();\n        for(Song song : MediaObserver.getCurrentSongList()) itemList.add(new ItemSpec(CardAdapter.adjustLength(song.getSongName()), CardAdapter.makeImageUrl(200, 200, song.getUrlToImage()), song.getArtistName(), song));\n\n        // Set up the RecyclerView with the fetched data\n        cardRecyclerView.setAdapter(new CardAdapter(itemList, this));\n        if(MediaObserver.getCurrentSong() != null) setRoundImage(CardAdapter.makeImageUrl(200, 200, MediaObserver.getCurrentSong().getUrlToImage()), MediaObserver.getCurrentSong().getSongName());\n\n        listRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\n        listRecyclerView.setAdapter(new ListAdapter(itemList, this));\n    }\n    public void setViewList(List<Map<String, Object>> maps){\n        cardRecyclerView.setLayoutManager(new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false));\n        List<ItemSpec> itemList = new ArrayList<>();\n\n        for(Map<String, Object> map : maps) MediaObserver.getCurrentSongList().add(GsonSongLoader.loadSong(map));\n        for(Song song : MediaObserver.getCurrentSongList()) itemList.add(new ItemSpec(CardAdapter.adjustLength(song.getSongName()), CardAdapter.makeImageUrl(200, 200, song.getUrlToImage()), song.getArtistName(), song));\n\n        // Set up the RecyclerView with the fetched data\n        cardRecyclerView.setAdapter(new CardAdapter(itemList, this));\n        if(MediaObserver.getCurrentSong() != null) setRoundImage(CardAdapter.makeImageUrl(200, 200, MediaObserver.getCurrentSong().getUrlToImage()), MediaObserver.getCurrentSong().getSongName());\n\n        listRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\n        listRecyclerView.setAdapter(new ListAdapter(itemList, this));\n    }\n\n    private void setRoundImage(String imageUrl,String songName){\n\n        Glide.with(this)\n                .load(imageUrl)\n                .apply(new RequestOptions().override((int)(1200 * 0.8), (int)(1200 * 0.8)))\n                .circleCrop()\n                .into(MediaObserver.roundImage);\n        if(MediaObserver.getCurrentMediaPlayer().isPlaying())   MediaObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(getContext(), R.anim.spinning));\n        roundUnderText.setText(CardAdapter.adjustLength(songName));\n    }\n\n    @Override\n    public void onItemClicked(ItemSpec itemSpec) throws IOException {\n        MediaObserver.setCurrentSong(itemSpec.getSong());\n        MediaObserver.getCurrentMediaPlayer().pause();\n        MediaObserver.getCurrentMediaPlayer().release();\n        MediaObserver.setMediaPlayer(new MediaPlayer());\n        MediaObserver.getCurrentMediaPlayer().setDataSource(itemSpec.getSong().getUrlToListen());\n        MediaObserver.getCurrentMediaPlayer().prepare();\n        MediaObserver.getCurrentMediaPlayer().setLooping(true);\n        MediaObserver.getCurrentMediaPlayer().start();\n        setRoundImage(CardAdapter.makeImageUrl(200, 200, MediaObserver.getCurrentSong().getUrlToImage()), MediaObserver.getCurrentSong().getSongName());\n        Intent intent = new Intent(getContext(), SongActivity.class);\n        // add more extras if necessary\n        startActivity(intent);\n    }\n\n    @Override\n    public void onChange() {\n        if(MediaObserver.getCurrentMediaPlayer() != null){\n            if ((MediaObserver.getCurrentMediaPlayer().isPlaying())) MediaObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(getContext(), R.anim.spinning));\n            else MediaObserver.roundImage.clearAnimation();\n        }\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeFragment.java b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeFragment.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeFragment.java	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeFragment.java	(date 1697081237809)
@@ -28,15 +28,14 @@
 import au.edu.anu.Aussic.controller.homePages.Adapter.CardAdapter;
 import au.edu.anu.Aussic.controller.homePages.Adapter.ItemSpec;
 import au.edu.anu.Aussic.controller.homePages.Adapter.ListAdapter;
-import au.edu.anu.Aussic.controller.searchPages.SearchActivity;
 import au.edu.anu.Aussic.controller.songPages.SongActivity;
 import au.edu.anu.Aussic.models.SongLoader.GsonSongLoader;
 import au.edu.anu.Aussic.models.entity.Song;
 import au.edu.anu.Aussic.models.firebase.FirestoreDao;
 import au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;
-import au.edu.anu.Aussic.models.observer.ChangeListener;
-import au.edu.anu.Aussic.models.observer.MediaObserver;
-import au.edu.anu.Aussic.models.observer.OnItemSpecClickListener;
+import au.edu.anu.Aussic.controller.observer.ChangeListener;
+import au.edu.anu.Aussic.controller.observer.RuntimeObserver;
+import au.edu.anu.Aussic.controller.observer.OnItemSpecClickListener;
 
 /**
  * A simple {@link Fragment} subclass.
@@ -59,8 +58,8 @@
 
     public HomeFragment() {
         // Required empty public constructor
-        MediaObserver.homeFragment = this;
-        MediaObserver.addChangeListener(this);
+        RuntimeObserver.homeFragment = this;
+        RuntimeObserver.addChangeListener(this);
     }
 
     /**
@@ -89,8 +88,8 @@
         this.cardRecyclerView = view.findViewById(R.id.card_recyclerView);
         this.listRecyclerView = view.findViewById(R.id.list_recyclerView);
         this.roundUnderText = view.findViewById(R.id.round_image_name);
-        MediaObserver.roundImage = view.findViewById(R.id.spinning_round_image);
-        MediaObserver.roundImage.setOnClickListener(new View.OnClickListener() {
+        RuntimeObserver.roundImage = view.findViewById(R.id.spinning_round_image);
+        RuntimeObserver.roundImage.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
 
@@ -101,13 +100,13 @@
         });
 
 
-        if(MediaObserver.getCurrentSongList() == null || MediaObserver.getCurrentSongList().isEmpty()){
+        if(RuntimeObserver.getCurrentSongList() == null || RuntimeObserver.getCurrentSongList().isEmpty()){
             FirestoreDao firestoreDao = new FirestoreDaoImpl();
             firestoreDao.getRandomSongs(10).thenAccept(results->{
                 List<Map<String, Object>> maps = new ArrayList<>();
                 maps.addAll(results);
                 setViewList(maps);
-                MediaObserver.notifyListeners();
+                RuntimeObserver.notifyListeners();
             });
         } else {
             setViewList();
@@ -136,11 +135,11 @@
     public void setViewList(){
         cardRecyclerView.setLayoutManager(new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false));
         List<ItemSpec> itemList = new ArrayList<>();
-        for(Song song : MediaObserver.getCurrentSongList()) itemList.add(new ItemSpec(CardAdapter.adjustLength(song.getSongName()), CardAdapter.makeImageUrl(200, 200, song.getUrlToImage()), song.getArtistName(), song));
+        for(Song song : RuntimeObserver.getCurrentSongList()) itemList.add(new ItemSpec(CardAdapter.adjustLength(song.getSongName()), CardAdapter.makeImageUrl(200, 200, song.getUrlToImage()), song.getArtistName(), song));
 
         // Set up the RecyclerView with the fetched data
         cardRecyclerView.setAdapter(new CardAdapter(itemList, this));
-        if(MediaObserver.getCurrentSong() != null) setRoundImage(CardAdapter.makeImageUrl(200, 200, MediaObserver.getCurrentSong().getUrlToImage()), MediaObserver.getCurrentSong().getSongName());
+        if(RuntimeObserver.getCurrentSong() != null) setRoundImage(CardAdapter.makeImageUrl(200, 200, RuntimeObserver.getCurrentSong().getUrlToImage()), RuntimeObserver.getCurrentSong().getSongName());
 
         listRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
         listRecyclerView.setAdapter(new ListAdapter(itemList, this));
@@ -149,12 +148,12 @@
         cardRecyclerView.setLayoutManager(new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false));
         List<ItemSpec> itemList = new ArrayList<>();
 
-        for(Map<String, Object> map : maps) MediaObserver.getCurrentSongList().add(GsonSongLoader.loadSong(map));
-        for(Song song : MediaObserver.getCurrentSongList()) itemList.add(new ItemSpec(CardAdapter.adjustLength(song.getSongName()), CardAdapter.makeImageUrl(200, 200, song.getUrlToImage()), song.getArtistName(), song));
+        for(Map<String, Object> map : maps) RuntimeObserver.getCurrentSongList().add(GsonSongLoader.loadSong(map));
+        for(Song song : RuntimeObserver.getCurrentSongList()) itemList.add(new ItemSpec(CardAdapter.adjustLength(song.getSongName()), CardAdapter.makeImageUrl(200, 200, song.getUrlToImage()), song.getArtistName(), song));
 
         // Set up the RecyclerView with the fetched data
         cardRecyclerView.setAdapter(new CardAdapter(itemList, this));
-        if(MediaObserver.getCurrentSong() != null) setRoundImage(CardAdapter.makeImageUrl(200, 200, MediaObserver.getCurrentSong().getUrlToImage()), MediaObserver.getCurrentSong().getSongName());
+        if(RuntimeObserver.getCurrentSong() != null) setRoundImage(CardAdapter.makeImageUrl(200, 200, RuntimeObserver.getCurrentSong().getUrlToImage()), RuntimeObserver.getCurrentSong().getSongName());
 
         listRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
         listRecyclerView.setAdapter(new ListAdapter(itemList, this));
@@ -166,22 +165,22 @@
                 .load(imageUrl)
                 .apply(new RequestOptions().override((int)(1200 * 0.8), (int)(1200 * 0.8)))
                 .circleCrop()
-                .into(MediaObserver.roundImage);
-        if(MediaObserver.getCurrentMediaPlayer().isPlaying())   MediaObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(getContext(), R.anim.spinning));
+                .into(RuntimeObserver.roundImage);
+        if(RuntimeObserver.getCurrentMediaPlayer().isPlaying())   RuntimeObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(getContext(), R.anim.spinning));
         roundUnderText.setText(CardAdapter.adjustLength(songName));
     }
 
     @Override
     public void onItemClicked(ItemSpec itemSpec) throws IOException {
-        MediaObserver.setCurrentSong(itemSpec.getSong());
-        MediaObserver.getCurrentMediaPlayer().pause();
-        MediaObserver.getCurrentMediaPlayer().release();
-        MediaObserver.setMediaPlayer(new MediaPlayer());
-        MediaObserver.getCurrentMediaPlayer().setDataSource(itemSpec.getSong().getUrlToListen());
-        MediaObserver.getCurrentMediaPlayer().prepare();
-        MediaObserver.getCurrentMediaPlayer().setLooping(true);
-        MediaObserver.getCurrentMediaPlayer().start();
-        setRoundImage(CardAdapter.makeImageUrl(200, 200, MediaObserver.getCurrentSong().getUrlToImage()), MediaObserver.getCurrentSong().getSongName());
+        RuntimeObserver.setCurrentSong(itemSpec.getSong());
+        RuntimeObserver.getCurrentMediaPlayer().pause();
+        RuntimeObserver.getCurrentMediaPlayer().release();
+        RuntimeObserver.setMediaPlayer(new MediaPlayer());
+        RuntimeObserver.getCurrentMediaPlayer().setDataSource(itemSpec.getSong().getUrlToListen());
+        RuntimeObserver.getCurrentMediaPlayer().prepare();
+        RuntimeObserver.getCurrentMediaPlayer().setLooping(true);
+        RuntimeObserver.getCurrentMediaPlayer().start();
+        setRoundImage(CardAdapter.makeImageUrl(200, 200, RuntimeObserver.getCurrentSong().getUrlToImage()), RuntimeObserver.getCurrentSong().getSongName());
         Intent intent = new Intent(getContext(), SongActivity.class);
         // add more extras if necessary
         startActivity(intent);
@@ -189,9 +188,9 @@
 
     @Override
     public void onChange() {
-        if(MediaObserver.getCurrentMediaPlayer() != null){
-            if ((MediaObserver.getCurrentMediaPlayer().isPlaying())) MediaObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(getContext(), R.anim.spinning));
-            else MediaObserver.roundImage.clearAnimation();
+        if(RuntimeObserver.getCurrentMediaPlayer() != null){
+            if ((RuntimeObserver.getCurrentMediaPlayer().isPlaying())) RuntimeObserver.roundImage.startAnimation(AnimationUtils.loadAnimation(getContext(), R.anim.spinning));
+            else RuntimeObserver.roundImage.clearAnimation();
         }
 
     }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project version=\"4\">\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision e0ccc60c024d35b29fe2f46259c705df4f079417)
+++ b/.idea/misc.xml	(date 1697078696159)
@@ -1,4 +1,7 @@
 <project version="4">
+  <component name="JavadocGenerationManager">
+    <option name="OUTPUT_DIRECTORY" value="$PROJECT_DIR$/../../../ga-23s2/Aussic" />
+  </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
