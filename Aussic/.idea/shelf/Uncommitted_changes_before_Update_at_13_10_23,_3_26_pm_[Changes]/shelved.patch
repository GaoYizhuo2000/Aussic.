Index: app/src/main/java/au/edu/anu/Aussic/controller/songPages/SongActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.songPages;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.app.Dialog;\nimport android.graphics.Color;\nimport android.graphics.drawable.ColorDrawable;\nimport android.os.Bundle;\nimport android.view.Gravity;\nimport android.view.KeyEvent;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.Window;\nimport android.view.animation.AnimationUtils;\nimport android.view.inputmethod.EditorInfo;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.RequestOptions;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.gson.Gson;\nimport com.google.gson.JsonObject;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.CardAdapter;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.CommentAdapter;\nimport au.edu.anu.Aussic.controller.homePages.Adapter.CommentItem;\nimport au.edu.anu.Aussic.controller.homePages.HomeActivity;\nimport au.edu.anu.Aussic.controller.observer.RuntimeObserver;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDao;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;\nimport au.edu.anu.Aussic.models.userAction.Comment;\nimport au.edu.anu.Aussic.models.userAction.Favorites;\nimport au.edu.anu.Aussic.models.userAction.Like;\nimport au.edu.anu.Aussic.models.userAction.UserAction;\nimport au.edu.anu.Aussic.models.userAction.UserActionFactory;\n\npublic class SongActivity extends AppCompatActivity {\n    private ImageView roundImageView;\n    private TextView nameText;\n    private TextView artistText;\n    private ImageView play;\n    private ImageView like;\n    private ImageView fav;\n    private ImageView comment;\n    FirestoreDao firestoreDao = new FirestoreDaoImpl();\n\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_song);\n\n        this.roundImageView = findViewById(R.id.song_spinning_round_image);\n        this.nameText = findViewById(R.id.song_song_name);\n        this.artistText = findViewById(R.id.song_artist_name);\n        this.play = findViewById(R.id.song_fab);\n        this.like = findViewById(R.id.song_like);\n        this.fav = findViewById(R.id.song_fav);\n        this.comment = findViewById(R.id.song_comment);\n\n        if (RuntimeObserver.getCurrentSong() != null)\n        setTheSong(CardAdapter.makeImageUrl(200, 200, RuntimeObserver.getCurrentSong().getUrlToImage()), RuntimeObserver.getCurrentSong().getSongName(), RuntimeObserver.getCurrentSong().getArtistName());\n\n        if(RuntimeObserver.getCurrentMediaPlayer().isPlaying()) this.play.setImageResource(R.drawable.ic_song_pause);\n        this.play.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                if (RuntimeObserver.getCurrentMediaPlayer() != null) {\n                    if (RuntimeObserver.getCurrentMediaPlayer().isPlaying()) {\n                        RuntimeObserver.getCurrentMediaPlayer().pause();\n                        play.setImageResource(R.drawable.ic_song_play);\n                        roundImageView.clearAnimation();\n                        RuntimeObserver.notifyListeners();\n                    } else {\n                        RuntimeObserver.getCurrentMediaPlayer().start();\n                        play.setImageResource(R.drawable.ic_song_pause);\n                        roundImageView.startAnimation(AnimationUtils.loadAnimation(SongActivity.this, R.anim.spinning));\n                        RuntimeObserver.notifyListeners();\n                    }\n                }\n            }\n        });\n\n        this.like.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v){\n                like.setImageResource(R.drawable.ic_song_like);\n                firestoreDao.updateUserLikes(RuntimeObserver.getCurrentSong().getId())\n                        .thenAccept(msg -> {\n                            if(msg == null){\n                                new Like(\"like\", FirebaseAuth.getInstance().getCurrentUser().getEmail(), RuntimeObserver.getCurrentSong().getSongName(), Integer.parseInt(RuntimeObserver.getCurrentSong().getId())).update();\n                            }else {\n                                Toast.makeText(SongActivity.this,msg,Toast.LENGTH_SHORT).show();\n                            }\n                        });\n            }\n        });\n\n        this.fav.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v){\n                fav.setImageResource(R.drawable.ic_song_fav);\n                firestoreDao.updateUserFavorites(RuntimeObserver.getCurrentSong().getId())\n                        .thenAccept(msg -> {\n                            if(msg == null){\n                                new Favorites(\"favorites\", FirebaseAuth.getInstance().getCurrentUser().getEmail(), RuntimeObserver.getCurrentSong().getSongName(), Integer.parseInt(RuntimeObserver.getCurrentSong().getId())).update();\n                            }else {\n                                Toast.makeText(SongActivity.this,msg,Toast.LENGTH_SHORT).show();\n                            }\n                });\n            }\n        });\n        this.comment.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v){\n                showBottomComments();\n            }\n        });\n\n\n\n\n\n\n    }\n\n    private void setTheSong(String imageUrl,String songName, String artistName){\n\n        Glide.with(this)\n                .load(imageUrl)\n                .apply(new RequestOptions().override((int)(1200 * 0.8), (int)(1200 * 0.8)))\n                .circleCrop()\n                .into(this.roundImageView);\n        if(RuntimeObserver.getCurrentMediaPlayer().isPlaying())   this.roundImageView.startAnimation(AnimationUtils.loadAnimation(this, R.anim.spinning));\n        else this.roundImageView.clearAnimation();\n        nameText.setText(CardAdapter.adjustLength(songName));\n        artistText.setText(CardAdapter.adjustLength(artistName));\n    }\n\n    private void showBottomComments() {\n        final Dialog dialog = new Dialog(this);\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\n        dialog.setContentView(R.layout.layout_comments);  // This is the layout for the comments.\n\n        // Views from the comments layout\n        EditText commentInput = dialog.findViewById(R.id.song_comment_input);\n        RecyclerView commentsRecyclerView = dialog.findViewById(R.id.rv_comments_list);\n        // If you have a RecyclerView adapter, initialize it here and set it to the RecyclerView\n\n        // We'll use the EditText's 'imeOptions' for the comment submission.\n        // First, set the EditText's IME action label to \"Submit\" and actionId to actionSend in the XML.\n        commentInput.setOnEditorActionListener(new TextView.OnEditorActionListener() {\n            @Override\n            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {\n                if (actionId == EditorInfo.IME_ACTION_SEND) {\n                    // Handle the comment submission here.\n                    String commentText = commentInput.getText().toString().trim();\n                    if (!commentText.isEmpty()) {\n                        // Add the comment to your comments list, update the RecyclerView, etc.\n                        dialog.dismiss();\n                    } else {\n                        Toast.makeText(SongActivity.this, \"Please enter a comment\", Toast.LENGTH_SHORT).show();\n                    }\n                    return true;\n                }\n                return false;\n            }\n        });\n\n        // Your data list for the comments\n        List<CommentItem> commentList = new ArrayList<>();\n\n\n        // Setup the RecyclerView and its adapter\n\n        CommentAdapter commentAdapter = new CommentAdapter(commentList);\n        commentsRecyclerView.setAdapter(commentAdapter);\n        commentsRecyclerView.setLayoutManager(new LinearLayoutManager(this));\n\n        // get and load comments\n        firestoreDao.getComment(RuntimeObserver.getCurrentSong().getId())\n                .thenAccept(details -> {\n                    for(Map<String, Object> comment : details) {\n                        CommentItem newComment = new CommentItem(\"https://firebasestorage.googleapis.com/v0/b/aussic-52582.appspot.com/o/icon%2Fdefault.jpg?alt=media\", (String) comment.get(\"uid\"), (String) comment.get(\"content\"));\n                        commentList.add(newComment);\n                        commentAdapter.notifyItemInserted(commentList.size() - 1);\n                    }\n\n\n                });\n\n\n\n\n\n        // Find and set an OnClickListener to the button\n        Button sendButton = dialog.findViewById(R.id.the_btn_send);\n        sendButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // Retrieve the comment from the EditText\n                String commentText = commentInput.getText().toString().trim();\n\n\n                if (!commentText.isEmpty()) {\n                    //update songs comment in firestore\n                    new Comment(\"comment\", FirebaseAuth.getInstance().getCurrentUser().getEmail(), RuntimeObserver.getCurrentSong().getSongName()\n                            , Integer.parseInt(RuntimeObserver.getCurrentSong().getId()), commentText ).update();\n                    // Create a new CommentItem object and add it to the commentList\n                    // Assuming CommentItem is a class that represents a comment with user avatar, name, and content\n                    CommentItem newComment = new CommentItem(RuntimeObserver.currentUser.iconUrl, RuntimeObserver.currentUser.username, commentText);\n                    commentList.add(newComment);\n\n                    // Notify the adapter that an item was added to the end of the list\n                    commentAdapter.notifyItemInserted(commentList.size() - 1);\n\n                    // Optional: Clear the EditText after sending the comment\n                    commentInput.setText(\"\");\n\n                    // Optional: Scroll the RecyclerView to show the new comment\n                    commentsRecyclerView.smoothScrollToPosition(commentList.size() - 1);\n                } else {\n                    Toast.makeText(SongActivity.this, \"Please enter a comment\", Toast.LENGTH_SHORT).show();\n                }\n            }\n        });\n\n        // If you want an additional UI element, like a close/cancel button, you can implement it similar to before:\n        // ImageView cancelButton = dialog.findViewById(R.id.cancelButton);\n        // cancelButton.setOnClickListener(new View.OnClickListener() {...}\n//        sendButton.setOnClickListener(new View.OnClickListener() {\n//            @Override\n//            public void onClick(View v) {\n//                String commentText = commentInput.getText().toString().trim();\n//                if (!commentText.isEmpty()) {\n//                    // Handle the comment submission, e.g., add the comment to your comments list, update the RecyclerView, etc.\n//                    dialog.dismiss();\n//                } else {\n//                    Toast.makeText(SongActivity.this, \"Please enter a comment\", Toast.LENGTH_SHORT).show();\n//                }\n//            }\n//        });\n\n        dialog.show();\n\n        // Set the dimensions and appearance of the dialog\n        dialog.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;\n        dialog.getWindow().setGravity(Gravity.BOTTOM);\n\n        // Allow the dialog to be canceled by touching outside its bounds\n        dialog.setCancelable(true);\n        dialog.setCanceledOnTouchOutside(true);\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/songPages/SongActivity.java b/app/src/main/java/au/edu/anu/Aussic/controller/songPages/SongActivity.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/songPages/SongActivity.java	(revision a5d2fa34da7b6c3cc7ea5b013b2df5c5bbfa1eb8)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/songPages/SongActivity.java	(date 1697082653969)
@@ -198,12 +198,7 @@
                         commentAdapter.notifyItemInserted(commentList.size() - 1);
                     }
 
-
                 });
-
-
-
-
 
         // Find and set an OnClickListener to the button
         Button sendButton = dialog.findViewById(R.id.the_btn_send);
@@ -237,21 +232,6 @@
             }
         });
 
-        // If you want an additional UI element, like a close/cancel button, you can implement it similar to before:
-        // ImageView cancelButton = dialog.findViewById(R.id.cancelButton);
-        // cancelButton.setOnClickListener(new View.OnClickListener() {...}
-//        sendButton.setOnClickListener(new View.OnClickListener() {
-//            @Override
-//            public void onClick(View v) {
-//                String commentText = commentInput.getText().toString().trim();
-//                if (!commentText.isEmpty()) {
-//                    // Handle the comment submission, e.g., add the comment to your comments list, update the RecyclerView, etc.
-//                    dialog.dismiss();
-//                } else {
-//                    Toast.makeText(SongActivity.this, "Please enter a comment", Toast.LENGTH_SHORT).show();
-//                }
-//            }
-//        });
 
         dialog.show();
 
Index: app/src/main/java/au/edu/anu/Aussic/controller/homePages/UserPageFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.homePages;\n\nimport android.content.Context;\nimport android.content.pm.PackageManager;\n//import android.location.Location;\n//import android.location.LocationListener;\nimport android.location.LocationManager;\nimport android.os.Bundle;\n\nimport androidx.core.app.ActivityCompat;\nimport androidx.core.content.ContextCompat;\nimport androidx.fragment.app.Fragment;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.google.android.gms.location.FusedLocationProviderClient;\nimport com.google.android.gms.location.LocationServices;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.squareup.picasso.Picasso;\n\n//import au.edu.anu.Aussic.Manifest;\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.controller.observer.RuntimeObserver;\nimport au.edu.anu.Aussic.models.entity.User;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDao;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;\n\n/**\n * A simple {@link Fragment} subclass.\n * Use the {@link UserPageFragment#newInstance} factory method to\n * create an instance of this fragment.\n */\npublic class UserPageFragment extends Fragment {\n    FusedLocationProviderClient fusedLocationProviderClient;\n\n    // TODO: Rename parameter arguments, choose names that match\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n    private static final String ARG_PARAM1 = \"param1\";\n    private static final String ARG_PARAM2 = \"param2\";\n    private TextView email,location;\n    private Button favorites, songList, getLocation;\n    private ImageView userPhoto;\n\n    // TODO: Rename and change types of parameters\n    private String mParam1;\n    private String mParam2;\n\n    public UserPageFragment() {\n        // Required empty public constructor\n    }\n\n    /**\n     * Use this factory method to create a new instance of\n     * this fragment using the provided parameters.\n     *\n     * @param param1 Parameter 1.\n     * @param param2 Parameter 2.\n     * @return A new instance of fragment LibraryFragment.\n     */\n    // TODO: Rename and change types and number of parameters\n    public static UserPageFragment newInstance(String param1, String param2) {\n        UserPageFragment fragment = new UserPageFragment();\n        Bundle args = new Bundle();\n        args.putString(ARG_PARAM1, param1);\n        args.putString(ARG_PARAM2, param2);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            mParam1 = getArguments().getString(ARG_PARAM1);\n            mParam2 = getArguments().getString(ARG_PARAM2);\n        }\n\n\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        View rootView = inflater.inflate(R.layout.fragment_userpage, container, false);\n\n        //locationManager = (LocationManager) getActivity().getSystemService(Context.LOCATION_SERVICE);\n\n        email = rootView.findViewById(R.id.userEmail);\n        favorites = rootView.findViewById(R.id.favoritesListButton);\n//        songList = rootView.findViewById(R.id.songListButton);\n        userPhoto = rootView.findViewById(R.id.userPhoto);\n        location = rootView.findViewById(R.id.userLocation);\n        getLocation = rootView.findViewById(R.id.getUserLocationButton);\n\n//        fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient();//TODO\n//        getLocation.setOnClickListener(new View.OnClickListener() {\n//            @Override\n//            public void onClick(View view) {\n//                getLastLocation();\n//            }\n//        });\n\n\n        //获取并显示用户数据\n//        FirestoreDao firestoreDao = new FirestoreDaoImpl();\n//        firestoreDao.getUserdata(FirebaseAuth.getInstance().getCurrentUser())\n//                .thenAccept(userdata -> {\n//                    String username = (String) userdata.get(\"username\");\n//                    //显示用户email\n//                    email.append(username);\n//                    String iconUrl = (String) userdata.get(\"iconUrl\");\n//                    Picasso.get().load(iconUrl ).into(userPhoto);\n//\n//                }\n        // Directly load user data from runtime storage\n        User usr = RuntimeObserver.currentUser;\n        email.append(usr.username);\n        Picasso.get().load(usr.iconUrl).into(userPhoto);\n\n\n        // Example: Click on the profile image to change it\n        userPhoto.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO: Implement functionality to change the profile image\n                Toast.makeText(getContext(), \"Change profile image feature not implemented yet.\", Toast.LENGTH_SHORT).show();\n            }\n        });\n\n        // Click listener for collections list\n        favorites.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO: Navigate to the collections page or implement another functionality\n                Toast.makeText(getContext(), \"Viewing collections!\", Toast.LENGTH_SHORT).show();\n            }\n        });\n\n        // Click listener for playlist\n//        songList.setOnClickListener(new View.OnClickListener() {\n//\n//            @Override\n//            public void onClick(View v) {\n//                // TODO: Navigate to the playlists page or implement another functionality\n//                Toast.makeText(getContext(), \"Viewing playlists!\", Toast.LENGTH_SHORT).show();\n//            }\n//        });\n        songList.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO: Navigate to the playlists page or implement another functionality\n                Toast.makeText(getContext(), \"Viewing playlists!\", Toast.LENGTH_SHORT).show();\n            }\n        });\n\n\n//        LocationListener locationListener = new LocationListener() {\n//            @Override\n//            public void onLocationChanged(Location location) {\n//                // When user location changed...\n//\n//            }\n//\n//            @Override\n//            public void onStatusChanged(String provider, int status, Bundle extras) {}\n//\n//            @Override\n//            public void onProviderEnabled(String provider) {}\n//\n//            @Override\n//            public void onProviderDisabled(String provider) {}\n//        };\n\n//        if (ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n//            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 1);\n//        } else {\n//            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, locationListener);\n//        }\n\n\n\n\n        return rootView;\n       // return inflater.inflate(R.layout.fragment_userpage, container, false);\n    }\n\n//    private void getLastLocation() {\n//        if (ContextCompat.checkSelfPermission(this, Manifest.permission))\n//    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/UserPageFragment.java b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/UserPageFragment.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/UserPageFragment.java	(revision a5d2fa34da7b6c3cc7ea5b013b2df5c5bbfa1eb8)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/UserPageFragment.java	(date 1697090554939)
@@ -19,8 +19,8 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import com.google.android.gms.location.FusedLocationProviderClient;
-import com.google.android.gms.location.LocationServices;
+//import com.google.android.gms.location.FusedLocationProviderClient;
+//import com.google.android.gms.location.LocationServices;
 import com.google.firebase.auth.FirebaseAuth;
 import com.squareup.picasso.Picasso;
 
@@ -37,7 +37,7 @@
  * create an instance of this fragment.
  */
 public class UserPageFragment extends Fragment {
-    FusedLocationProviderClient fusedLocationProviderClient;
+//    FusedLocationProviderClient fusedLocationProviderClient;
 
     // TODO: Rename parameter arguments, choose names that match
     // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
@@ -152,13 +152,13 @@
 //                Toast.makeText(getContext(), "Viewing playlists!", Toast.LENGTH_SHORT).show();
 //            }
 //        });
-        songList.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                // TODO: Navigate to the playlists page or implement another functionality
-                Toast.makeText(getContext(), "Viewing playlists!", Toast.LENGTH_SHORT).show();
-            }
-        });
+//        songList.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                // TODO: Navigate to the playlists page or implement another functionality
+//                Toast.makeText(getContext(), "Viewing playlists!", Toast.LENGTH_SHORT).show();
+//            }
+//        });
 
 
 //        LocationListener locationListener = new LocationListener() {
