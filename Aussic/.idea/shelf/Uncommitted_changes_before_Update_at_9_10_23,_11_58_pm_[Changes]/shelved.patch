Index: app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.homePages;\n\nimport androidx.appcompat.app.ActionBarDrawerToggle;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.SearchView;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.core.view.GravityCompat;\nimport androidx.drawerlayout.widget.DrawerLayout;\n\nimport android.content.Intent;\nimport android.media.MediaPlayer;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.view.Gravity;\n\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport com.google.android.material.navigation.NavigationView;\nimport com.google.gson.JsonArray;\nimport com.google.gson.JsonObject;\nimport com.google.gson.JsonParser;\n\n\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentTransaction;\n\nimport android.app.Dialog;\nimport android.graphics.Color;\nimport android.graphics.drawable.ColorDrawable;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.Window;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.Toast;\n\nimport java.io.InputStreamReader;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.controller.searchPages.SearchActivity;\nimport au.edu.anu.Aussic.models.entity.Media;\nimport au.edu.anu.Aussic.models.entity.Song;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDao;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;\nimport au.edu.anu.Aussic.models.jsonParser.JsonSongLoader;\nimport au.edu.anu.Aussic.models.userAction.UserAction;\nimport au.edu.anu.Aussic.models.userAction.UserActionFactory;\n\n\npublic class HomeActivity extends AppCompatActivity {\n\n    FloatingActionButton fab;\n    DrawerLayout drawerLayout;\n    BottomNavigationView bottomNavigationView;\n    NavigationView navigationView;\n    private HomeFragment homeFragment = new HomeFragment();\n    private ShortsFragment shortsFragment= new ShortsFragment();\n    private SubscriptionsFragment subscriptionsFragment = new SubscriptionsFragment();\n    private LibraryFragment libraryFragment = new LibraryFragment();\n    private FavoritesFragment favoritesFragment = new FavoritesFragment();\n    private Handler timerHandler = new Handler();\n    private MediaPlayer mediaPlayer;\n    private JsonObject jsonObject = null;\n    private JsonArray jsonArray;\n    private int arrayLength = 0;\n    private int currentID = 0;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_home);\n\n        bottomNavigationView = findViewById(R.id.bottomNavigationView);\n        fab =findViewById(R.id.fab);\n        drawerLayout = findViewById(R.id.drawer_layout);\n        navigationView = findViewById(R.id.nav_view);\n        Toolbar toolbar = findViewById(R.id.toolbar);\n\n\n\n        SearchView searchView = findViewById(R.id.searchView);\n\n        // Set an OnClickListener on the SearchView\n        searchView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // Start the SearchActivity\n                Intent intent = new Intent(HomeActivity.this, SearchActivity.class);\n                startActivity(intent);\n            }\n        });\n        // Set the OnClickListener for all children views of SearchView\n        setOnClickListenerForAllChildren(searchView, new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(HomeActivity.this, SearchActivity.class);\n                startActivity(intent);\n            }\n        });\n\n\n        setSupportActionBar(toolbar);\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.open_nav,R.string.close_nav);\n        drawerLayout.addDrawerListener(toggle);\n        toggle.syncState();\n\n        if(savedInstanceState == null){\n            getSupportFragmentManager().beginTransaction().replace(R.id.fragment_layout, new HomeFragment()).commit();\n            navigationView.setCheckedItem(R.id.nav_home);\n        }\n\n        replaceFragment(new HomeFragment());\n\n        bottomNavigationView.setBackground(null);\n        bottomNavigationView.setOnItemSelectedListener(item -> {\n\n                if(item.getItemId() == R.id.home) replaceFragment(homeFragment);\n\n                else if(item.getItemId() == R.id.shorts) replaceFragment(shortsFragment);\n\n                else if(item.getItemId() == R.id.subscriptions) replaceFragment(subscriptionsFragment);\n\n                else if(item.getItemId() == R.id.library) replaceFragment(libraryFragment);\n\n            return true;\n        });\n\n        navigationView.setNavigationItemSelectedListener(menuItem -> {\n            // Closing the drawer after selecting\n            drawerLayout.closeDrawer(GravityCompat.START);\n            if(menuItem.getItemId() == R.id.nav_home) replaceFragment(homeFragment);\n            else if (menuItem.getItemId() == R.id.nav_favorites) replaceFragment(favoritesFragment);\n            else if(menuItem.getItemId() == R.id.nav_settings) replaceFragment(shortsFragment);\n            else if(menuItem.getItemId() == R.id.nav_share) replaceFragment(subscriptionsFragment);\n            else if(menuItem.getItemId() == R.id.nav_about) replaceFragment(libraryFragment);\n\n            return true;\n        });\n\n        FirestoreDao firestoreDao = new FirestoreDaoImpl();\n        firestoreDao.getRandomSong().thenAccept(results ->{\n            Media.currentSong = JsonSongLoader.loadSong(results);\n            Media.mediaPlayer = new MediaPlayer();\n            this.mediaPlayer = Media.mediaPlayer;\n            try{\n                mediaPlayer.setDataSource(Media.currentSong.getUrlToListen());\n                mediaPlayer.prepare();\n                mediaPlayer.setLooping(true);\n                //mediaPlayer.setVolume(1.0f,1.0f);\n            } catch (Exception e){\n                e.printStackTrace();\n            }\n        });\n\n\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                if (mediaPlayer != null) {\n                    if (mediaPlayer.isPlaying()) {\n                        mediaPlayer.pause();\n                        fab.setImageResource(R.drawable.ic_bottom_play);\n                    } else {\n                        mediaPlayer.start();\n                        fab.setImageResource(R.drawable.ic_bottom_stop);\n                    }\n                    //showBottomDialog();\n                }\n            }\n        });\n\n        loadJsonObjectFromRawResource(R.raw.useractions);\n        timerHandler.postDelayed(timerRunnable, 10000);\n    }\n    // Outside Oncreate\n    private void replaceFragment(Fragment fragment) {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\n        fragmentTransaction.replace(R.id.fragment_layout, fragment);\n        fragmentTransaction.commit();\n    }\n\n    private void showBottomDialog() {\n\n        final Dialog dialog = new Dialog(this);\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\n        dialog.setContentView(R.layout.bottomsheetlayout);\n\n        LinearLayout videoLayout = dialog.findViewById(R.id.layoutVideo);\n        LinearLayout shortsLayout = dialog.findViewById(R.id.layoutShorts);\n        LinearLayout liveLayout = dialog.findViewById(R.id.layoutLive);\n        ImageView cancelButton = dialog.findViewById(R.id.cancelButton);\n\n        videoLayout.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                dialog.dismiss();\n                Toast.makeText(HomeActivity.this,\"Upload a Video is clicked\",Toast.LENGTH_SHORT).show();\n\n            }\n        });\n\n        shortsLayout.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                dialog.dismiss();\n                Toast.makeText(HomeActivity.this,\"Create a short is Clicked\",Toast.LENGTH_SHORT).show();\n\n            }\n        });\n\n        liveLayout.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                dialog.dismiss();\n                Toast.makeText(HomeActivity.this,\"Go live is Clicked\",Toast.LENGTH_SHORT).show();\n\n            }\n        });\n\n        cancelButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                dialog.dismiss();\n            }\n        });\n\n        dialog.show();\n        dialog.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;\n        dialog.getWindow().setGravity(Gravity.BOTTOM);\n\n    }\n\n    private Runnable timerRunnable = new Runnable() {\n        @Override\n        public void run() {\n            // load show user behavior every 10 secs\n            //loadShowData();\n\n            // Schedule the next execution\n            timerHandler.postDelayed(this, 5000);\n        }\n    };\n    public void loadJsonObjectFromRawResource(int resourceId) {\n        try {\n            // Open the resource stream\n            InputStreamReader reader = new InputStreamReader(getResources().openRawResource(resourceId));\n\n            // Parse the string content to a JsonObject using Gson\n            jsonArray = JsonParser.parseReader(reader).getAsJsonArray();\n            arrayLength = jsonArray.size();\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    private void loadShowData() {\n        // mimic user behavior every 10 seconds\n        jsonObject = jsonArray.get(currentID).getAsJsonObject();\n        UserAction userAction = UserActionFactory.createUserAction(jsonObject);\n        userAction.update();\n        Toast.makeText(this, userAction.getToastMessage(), Toast.LENGTH_SHORT).show();\n\n        currentID += 1;\n        if(currentID >= arrayLength) currentID = currentID % arrayLength;\n    }\n\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        if(mediaPlayer != null){\n            mediaPlayer.release();\n            mediaPlayer = null;\n        }\n    }\n\n    private void setOnClickListenerForAllChildren(View parent, View.OnClickListener listener) {\n        if (!(parent instanceof ViewGroup)) {\n            return;\n        }\n        ViewGroup viewGroup = (ViewGroup) parent;\n        for (int i = 0; i < viewGroup.getChildCount(); i++) {\n            View child = viewGroup.getChildAt(i);\n            child.setOnClickListener(listener);\n            setOnClickListenerForAllChildren(child, listener);\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeActivity.java b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeActivity.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeActivity.java	(revision 752f543edbe077f3b07c3e6e108a43ec82cf4abc)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/homePages/HomeActivity.java	(date 1696856271830)
@@ -139,18 +139,21 @@
         });
 
         FirestoreDao firestoreDao = new FirestoreDaoImpl();
-        firestoreDao.getRandomSong().thenAccept(results ->{
-            Media.currentSong = JsonSongLoader.loadSong(results);
-            Media.mediaPlayer = new MediaPlayer();
-            this.mediaPlayer = Media.mediaPlayer;
+        firestoreDao.getRandomSongs(1).thenAccept(results ->{
+            Media.setCurrentSong(JsonSongLoader.loadSong(results.get(0)));
+            Media.setMediaPlayer(new MediaPlayer());
+            this.mediaPlayer = Media.getCurrentMediaPlayer();
             try{
-                mediaPlayer.setDataSource(Media.currentSong.getUrlToListen());
+                mediaPlayer.setDataSource(Media.getCurrentSong().getUrlToListen());
                 mediaPlayer.prepare();
                 mediaPlayer.setLooping(true);
                 //mediaPlayer.setVolume(1.0f,1.0f);
             } catch (Exception e){
                 e.printStackTrace();
             }
+            mediaPlayer.start();
+            fab.setImageResource(R.drawable.ic_bottom_stop);
+            Media.notifyListeners();
         });
 
 
Index: app/src/main/java/au/edu/anu/Aussic/controller/searchPages/SearchActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.controller.searchPages;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.annotation.SuppressLint;\nimport android.content.res.ColorStateList;\nimport android.graphics.drawable.Drawable;\nimport android.graphics.drawable.RippleDrawable;\nimport android.media.MediaPlayer;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.Toast;\n\nimport androidx.appcompat.widget.SearchView;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentTransaction;\n\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport com.google.android.material.tabs.TabLayout;\nimport com.google.gson.Gson;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.concurrent.CompletableFuture;\n\nimport au.edu.anu.Aussic.R;\nimport au.edu.anu.Aussic.models.entity.Media;\nimport au.edu.anu.Aussic.models.entity.Song;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDao;\nimport au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;\n\npublic class SearchActivity extends AppCompatActivity {\n    private MediaPlayer mediaPlayer;\n    private Button searchButton;\n    private SearchView searchView;\n    private TabLayout tabs;\n    private int selectID;\n    private boolean isInit;\n    private GeneralSearchFragment generalSearch;\n    private SongSearchFragment songSearch;\n    private ArtistSearchFragment artistSearch;\n    private GenreSearchFragment genreSearch;\n\n\n    @SuppressLint(\"ResourceAsColor\")\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_search);\n        FloatingActionButton fab = findViewById(R.id.search_fab);\n        searchButton = findViewById(R.id.btn_search);\n        searchView = findViewById(R.id.searchView_search);\n\n        this.generalSearch = new GeneralSearchFragment();\n        this.songSearch = new SongSearchFragment();\n        this.artistSearch = new ArtistSearchFragment();\n        this.genreSearch = new GenreSearchFragment();\n\n        this.tabs = findViewById(R.id.tabs);\n\n        for(int i = 0; i < 2; i++)  setTabColor(i, R.drawable.ic_tabs_trans_bg_alt);\n        for(int i = 2; i < 6; i++)  setTabColor(i, R.drawable.ic_tabs_trans_bg);\n\n        // Select general for the first init\n        setTabColor(2, R.drawable.ic_tabs_bg);\n        this.selectID = 2;\n        this.isInit = true;\n        replaceFragment(generalSearch);\n\n        tabs.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\n            @Override\n            public void onTabSelected(TabLayout.Tab tab) {\n                if(isInit) {\n                    setTabColor(2, R.drawable.ic_tabs_trans_bg);\n                    isInit = false;\n                }\n                int selectedTabIndex = tab.getPosition();\n                switch (selectedTabIndex) {\n                    case 0:\n                        // Actions for \"Likes\" tab\n                        setTabColor(0, R.drawable.ic_tabs_bg_alt);\n                        break;\n                    case 1:\n                        // Actions for \"Comments\" tab\n                        setTabColor(1, R.drawable.ic_tabs_bg_alt);\n                        break;\n                    case 2:\n                        // Actions for \"General\" tab\n                        setTabColor(2, R.drawable.ic_tabs_bg);\n                        replaceFragment(generalSearch);\n                        break;\n                    case 3:\n                        setTabColor(3, R.drawable.ic_tabs_bg);\n                        replaceFragment(songSearch);\n                        // Actions for \"Song\" tab\n                        break;\n                    case 4:\n                        setTabColor(4, R.drawable.ic_tabs_bg);\n                        replaceFragment(artistSearch);\n                        // Actions for \"Artist\" tab\n                        break;\n                    case 5:\n                        setTabColor(5, R.drawable.ic_tabs_bg);\n                        replaceFragment(genreSearch);\n                        // Actions for \"Genre\" tab\n                        break;\n                    // Add more cases if there are more tabs\n                }\n                selectID = selectedTabIndex;\n            }\n\n            @Override\n            public void onTabUnselected(TabLayout.Tab tab) {\n                int selectedTabIndex = tab.getPosition();\n                switch (selectedTabIndex) {\n                    case 0:\n                        // Actions for \"Likes\" tab\n                        setTabColor(0, R.drawable.ic_tabs_trans_bg_alt);\n                        break;\n                    case 1:\n                        // Actions for \"Comments\" tab\n                        setTabColor(1, R.drawable.ic_tabs_trans_bg_alt);\n                        break;\n                    case 2:\n                        // Actions for \"General\" tab\n                        setTabColor(2, R.drawable.ic_tabs_trans_bg);\n                        break;\n                    case 3:\n                        setTabColor(3, R.drawable.ic_tabs_trans_bg);\n                        // Actions for \"Song\" tab\n                        break;\n                    case 4:\n                        setTabColor(4, R.drawable.ic_tabs_trans_bg);\n                        // Actions for \"Artist\" tab\n                        break;\n                    case 5:\n                        setTabColor(5, R.drawable.ic_tabs_trans_bg);\n                        // Actions for \"Genre\" tab\n                        break;\n                    // Add more cases if there are more tabs\n                }\n\n            }\n\n            @Override\n            public void onTabReselected(TabLayout.Tab tab){}\n        });\n\n\n        searchView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // Request focus and show the soft keyboard\n                searchView.setIconified(false);\n            }\n        });\n\n\n        this.mediaPlayer = Media.mediaPlayer;\n        if(mediaPlayer != null) {\n            if (this.mediaPlayer.isPlaying()) fab.setImageResource(R.drawable.ic_bottom_stop);\n            else fab.setImageResource(R.drawable.ic_bottom_play);\n        }\n\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                if (mediaPlayer != null) {\n                    if (mediaPlayer.isPlaying()) {\n                        mediaPlayer.pause();\n                        fab.setImageResource(R.drawable.ic_bottom_play);\n                    } else {\n                        mediaPlayer.start();\n                        fab.setImageResource(R.drawable.ic_bottom_stop);\n                    }\n                    //showBottomDialog();\n                }\n            }\n        });\n\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\n            @Override\n            public boolean onQueryTextSubmit(String input) {\n                // The IME action was detected, perform the same action as your search button\n                doSearch(input);\n                return true;\n            }\n\n            @Override\n            public boolean onQueryTextChange(String newText) {\n                // Handle real-time query changes if needed\n                return false;\n            }\n        });\n\n        searchButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                String query = searchView.getQuery().toString();\n                doSearch(query);\n            }\n        });\n\n\n    }\n\n    private void doSearch(String input){\n        // hide the keyboard when button is clicked\n        searchView.setQuery(\"\", false); // Set the query text to an empty string\n        searchView.setIconified(true);\n        searchView.setIconified(true);\n\n        //把搜索框中的查询传给parser，在parser里转成map然后调用firestoreDao.searchSongs(terms)\n\n        Map<String, Object> terms = new HashMap<>();\n        terms.put(\"artistName\", \"INXS\");\n        terms.put(\"name\", \"Devil's Party (Slick Mix)\");\n        terms.put(\"releaseDate\", null);\n\n\n        FirestoreDao firestoreDao = new FirestoreDaoImpl();\n//        firestoreDao.searchSongs(terms).thenAccept(results -> {\n//            //拿到查询结果后处理，放入listview\n//\n//        });\n\n        List<Map<String, Object>> songs = new ArrayList<>();\n        //String a = firestoreDao.getRandomSong().toString();\n        firestoreDao.getRandomSongs(100).thenAccept(results ->{\n\n            songs.addAll(results);\n\n            Object attributes = songs.get(0).get(\"attributes\");\n            Object artwork = ((Map<String, Object>) attributes).get(\"artwork\");\n            String urlToImage = ((Map<String, Object>) artwork).get(\"url\").toString();\n            Map<String, Object> a = songs.get(0);\n            Gson gson = new Gson();\n            String jsonData = gson.toJson(a);\n            Song song = gson.fromJson(jsonData, Song.class);\n\n//            Song song = new Song(songs.get(0));\n\n            Toast.makeText(this, urlToImage, Toast.LENGTH_SHORT).show();\n        });\n\n\n        \n\n    }\n\n    private void setTabColor(int index, int drawable) {\n        View tabView = ((ViewGroup) tabs.getChildAt(0)).getChildAt(index);\n\n        Drawable background = tabView.getBackground();\n\n        RippleDrawable oldRippleDrawable = (RippleDrawable) background;\n\n        // Extract ripple color from the old ripple drawable\n        ColorStateList rippleColor = oldRippleDrawable.getEffectColor();\n\n        // Create new RippleDrawable\n        RippleDrawable newRippleDrawable = new RippleDrawable(rippleColor, getResources().getDrawable(drawable), null);\n\n        // Set the new background\n        tabView.setBackground(newRippleDrawable);\n    }\n\n    private void replaceFragment(Fragment fragment) {\n        FragmentManager fragmentManager = getSupportFragmentManager();\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\n        fragmentTransaction.replace(R.id.fragment_layout, fragment);\n        fragmentTransaction.commit();\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/SearchActivity.java b/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/SearchActivity.java
--- a/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/SearchActivity.java	(revision 752f543edbe077f3b07c3e6e108a43ec82cf4abc)
+++ b/app/src/main/java/au/edu/anu/Aussic/controller/searchPages/SearchActivity.java	(date 1696856119586)
@@ -29,12 +29,13 @@
 import java.util.concurrent.CompletableFuture;
 
 import au.edu.anu.Aussic.R;
+import au.edu.anu.Aussic.models.Listener.ChangeListener;
 import au.edu.anu.Aussic.models.entity.Media;
 import au.edu.anu.Aussic.models.entity.Song;
 import au.edu.anu.Aussic.models.firebase.FirestoreDao;
 import au.edu.anu.Aussic.models.firebase.FirestoreDaoImpl;
 
-public class SearchActivity extends AppCompatActivity {
+public class SearchActivity extends AppCompatActivity implements ChangeListener {
     private MediaPlayer mediaPlayer;
     private Button searchButton;
     private SearchView searchView;
@@ -45,6 +46,7 @@
     private SongSearchFragment songSearch;
     private ArtistSearchFragment artistSearch;
     private GenreSearchFragment genreSearch;
+    private FloatingActionButton fab;
 
 
     @SuppressLint("ResourceAsColor")
@@ -52,7 +54,7 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_search);
-        FloatingActionButton fab = findViewById(R.id.search_fab);
+        fab = findViewById(R.id.search_fab);
         searchButton = findViewById(R.id.btn_search);
         searchView = findViewById(R.id.searchView_search);
 
@@ -160,8 +162,10 @@
             }
         });
 
+        Media.addChangeListener(this);
 
-        this.mediaPlayer = Media.mediaPlayer;
+        this.mediaPlayer = Media.getCurrentMediaPlayer();
+
         if(mediaPlayer != null) {
             if (this.mediaPlayer.isPlaying()) fab.setImageResource(R.drawable.ic_bottom_stop);
             else fab.setImageResource(R.drawable.ic_bottom_play);
@@ -276,4 +280,11 @@
         fragmentTransaction.replace(R.id.fragment_layout, fragment);
         fragmentTransaction.commit();
     }
+
+    @Override
+    public void onChange(){
+        this.mediaPlayer = Media.getCurrentMediaPlayer();
+        if (mediaPlayer.isPlaying()) this.fab.setImageResource(R.drawable.ic_bottom_stop);
+        else this.fab.setImageResource(R.drawable.ic_bottom_play);
+    }
 }
\ No newline at end of file
Index: app/src/main/java/au/edu/anu/Aussic/models/entity/Media.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package au.edu.anu.Aussic.models.entity;\n\nimport android.media.MediaPlayer;\n\n/**\n * The class for song playing and pausing\n */\npublic class Media {\n    public static MediaPlayer mediaPlayer;\n    public static Song currentSong;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/models/entity/Media.java b/app/src/main/java/au/edu/anu/Aussic/models/entity/Media.java
--- a/app/src/main/java/au/edu/anu/Aussic/models/entity/Media.java	(revision 752f543edbe077f3b07c3e6e108a43ec82cf4abc)
+++ b/app/src/main/java/au/edu/anu/Aussic/models/entity/Media.java	(date 1696856271842)
@@ -1,11 +1,47 @@
 package au.edu.anu.Aussic.models.entity;
 
+import android.app.Activity;
 import android.media.MediaPlayer;
 
+import java.beans.PropertyChangeListener;
+import java.beans.PropertyChangeSupport;
+import java.util.ArrayList;
+import java.util.List;
+
+import au.edu.anu.Aussic.models.Listener.ChangeListener;
+
 /**
  * The class for song playing and pausing
  */
 public class Media {
-    public static MediaPlayer mediaPlayer;
-    public static Song currentSong;
+    private static MediaPlayer currentMediaPlayer;
+    private static Song currentSong;
+    private static List<ChangeListener> listeners = new ArrayList<>();
+    public static void setMediaPlayer(MediaPlayer mediaPlayer){
+        currentMediaPlayer = mediaPlayer;
+        notifyListeners();
+    }
+    public static void setCurrentSong(Song song){
+        currentSong = song;
+    }
+
+    public static MediaPlayer getCurrentMediaPlayer() {
+        return currentMediaPlayer;
+    }
+
+    public static Song getCurrentSong() {
+        return currentSong;
+    }
+
+    public static void addChangeListener(ChangeListener newListener) {
+        listeners.add(newListener);
+    }
+
+    public static void removeChangeListener(ChangeListener listenerToRemove) {
+        listeners.remove(listenerToRemove);
+    }
+
+    public static void notifyListeners() {
+        for (ChangeListener listener : listeners) listener.onChange();
+    }
 }
Index: app/src/main/java/au/edu/anu/Aussic/models/Listener/ChangeListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/au/edu/anu/Aussic/models/Listener/ChangeListener.java b/app/src/main/java/au/edu/anu/Aussic/models/Listener/ChangeListener.java
new file mode 100644
--- /dev/null	(date 1696855859564)
+++ b/app/src/main/java/au/edu/anu/Aussic/models/Listener/ChangeListener.java	(date 1696855859564)
@@ -0,0 +1,5 @@
+package au.edu.anu.Aussic.models.Listener;
+
+public interface ChangeListener {
+    void onChange();
+}
